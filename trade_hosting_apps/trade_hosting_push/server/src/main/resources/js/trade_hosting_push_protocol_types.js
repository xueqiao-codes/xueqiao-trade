//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


if (typeof xueqiao === 'undefined') {
  xueqiao = {};
}
if (typeof xueqiao.trade === 'undefined') {
  xueqiao.trade = {};
}
if (typeof xueqiao.trade.hosting === 'undefined') {
  xueqiao.trade.hosting = {};
}
if (typeof xueqiao.trade.hosting.push === 'undefined') {
  xueqiao.trade.hosting.push = {};
}
if (typeof xueqiao.trade.hosting.push.protocol === 'undefined') {
  xueqiao.trade.hosting.push.protocol = {};
}
xueqiao.trade.hosting.push.protocol.ProtocolType = {
'QUOTATION' : 1,
'USERMSG' : 2,
'REQ' : 3,
'RESP' : 4,
'SEQMSG' : 5
};
xueqiao.trade.hosting.push.protocol.ProtocolCallErrors = {
'ParamError' : 1000,
'MethodNotFound' : 1001,
'TokenInvalid' : 1002,
'ServiceUnavailable' : 2003
};
xueqiao.trade.hosting.push.protocol.UserMsgContent = function(args) {
  this.msgType = null;
  this.msgBytes = null;
  if (args) {
    if (args.msgType !== undefined) {
      this.msgType = args.msgType;
    }
    if (args.msgBytes !== undefined) {
      this.msgBytes = args.msgBytes;
    }
  }
};
xueqiao.trade.hosting.push.protocol.UserMsgContent.prototype = {};
xueqiao.trade.hosting.push.protocol.UserMsgContent.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.msgType = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.msgBytes = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.UserMsgContent.prototype.write = function(output) {
  output.writeStructBegin('UserMsgContent');
  if (this.msgType !== null && this.msgType !== undefined) {
    output.writeFieldBegin('msgType', Thrift.Type.STRING, 1);
    output.writeString(this.msgType);
    output.writeFieldEnd();
  }
  if (this.msgBytes !== null && this.msgBytes !== undefined) {
    output.writeFieldBegin('msgBytes', Thrift.Type.STRING, 2);
    output.writeString(this.msgBytes);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.ReqContent = function(args) {
  this.requestId = null;
  this.requestStructType = null;
  this.requestStructBytes = null;
  if (args) {
    if (args.requestId !== undefined) {
      this.requestId = args.requestId;
    }
    if (args.requestStructType !== undefined) {
      this.requestStructType = args.requestStructType;
    }
    if (args.requestStructBytes !== undefined) {
      this.requestStructBytes = args.requestStructBytes;
    }
  }
};
xueqiao.trade.hosting.push.protocol.ReqContent.prototype = {};
xueqiao.trade.hosting.push.protocol.ReqContent.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.requestId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.requestStructType = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.requestStructBytes = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.ReqContent.prototype.write = function(output) {
  output.writeStructBegin('ReqContent');
  if (this.requestId !== null && this.requestId !== undefined) {
    output.writeFieldBegin('requestId', Thrift.Type.I64, 1);
    output.writeI64(this.requestId);
    output.writeFieldEnd();
  }
  if (this.requestStructType !== null && this.requestStructType !== undefined) {
    output.writeFieldBegin('requestStructType', Thrift.Type.STRING, 2);
    output.writeString(this.requestStructType);
    output.writeFieldEnd();
  }
  if (this.requestStructBytes !== null && this.requestStructBytes !== undefined) {
    output.writeFieldBegin('requestStructBytes', Thrift.Type.STRING, 3);
    output.writeString(this.requestStructBytes);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.RespContent = function(args) {
  this.responseId = null;
  this.requestId = null;
  this.errCode = null;
  this.errMsg = null;
  this.responseStructType = null;
  this.responseStructBytes = null;
  if (args) {
    if (args.responseId !== undefined) {
      this.responseId = args.responseId;
    }
    if (args.requestId !== undefined) {
      this.requestId = args.requestId;
    }
    if (args.errCode !== undefined) {
      this.errCode = args.errCode;
    }
    if (args.errMsg !== undefined) {
      this.errMsg = args.errMsg;
    }
    if (args.responseStructType !== undefined) {
      this.responseStructType = args.responseStructType;
    }
    if (args.responseStructBytes !== undefined) {
      this.responseStructBytes = args.responseStructBytes;
    }
  }
};
xueqiao.trade.hosting.push.protocol.RespContent.prototype = {};
xueqiao.trade.hosting.push.protocol.RespContent.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.responseId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.requestId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.errCode = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.errMsg = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.responseStructType = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.responseStructBytes = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.RespContent.prototype.write = function(output) {
  output.writeStructBegin('RespContent');
  if (this.responseId !== null && this.responseId !== undefined) {
    output.writeFieldBegin('responseId', Thrift.Type.I64, 1);
    output.writeI64(this.responseId);
    output.writeFieldEnd();
  }
  if (this.requestId !== null && this.requestId !== undefined) {
    output.writeFieldBegin('requestId', Thrift.Type.I64, 2);
    output.writeI64(this.requestId);
    output.writeFieldEnd();
  }
  if (this.errCode !== null && this.errCode !== undefined) {
    output.writeFieldBegin('errCode', Thrift.Type.I32, 3);
    output.writeI32(this.errCode);
    output.writeFieldEnd();
  }
  if (this.errMsg !== null && this.errMsg !== undefined) {
    output.writeFieldBegin('errMsg', Thrift.Type.STRING, 4);
    output.writeString(this.errMsg);
    output.writeFieldEnd();
  }
  if (this.responseStructType !== null && this.responseStructType !== undefined) {
    output.writeFieldBegin('responseStructType', Thrift.Type.STRING, 5);
    output.writeString(this.responseStructType);
    output.writeFieldEnd();
  }
  if (this.responseStructBytes !== null && this.responseStructBytes !== undefined) {
    output.writeFieldBegin('responseStructBytes', Thrift.Type.STRING, 6);
    output.writeString(this.responseStructBytes);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.SeqMsgContent = function(args) {
  this.seqNo = null;
  this.msgType = null;
  this.msgBytes = null;
  if (args) {
    if (args.seqNo !== undefined) {
      this.seqNo = args.seqNo;
    }
    if (args.msgType !== undefined) {
      this.msgType = args.msgType;
    }
    if (args.msgBytes !== undefined) {
      this.msgBytes = args.msgBytes;
    }
  }
};
xueqiao.trade.hosting.push.protocol.SeqMsgContent.prototype = {};
xueqiao.trade.hosting.push.protocol.SeqMsgContent.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.seqNo = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.msgType = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.msgBytes = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.SeqMsgContent.prototype.write = function(output) {
  output.writeStructBegin('SeqMsgContent');
  if (this.seqNo !== null && this.seqNo !== undefined) {
    output.writeFieldBegin('seqNo', Thrift.Type.I64, 1);
    output.writeI64(this.seqNo);
    output.writeFieldEnd();
  }
  if (this.msgType !== null && this.msgType !== undefined) {
    output.writeFieldBegin('msgType', Thrift.Type.STRING, 2);
    output.writeString(this.msgType);
    output.writeFieldEnd();
  }
  if (this.msgBytes !== null && this.msgBytes !== undefined) {
    output.writeFieldBegin('msgBytes', Thrift.Type.STRING, 3);
    output.writeString(this.msgBytes);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.ProtocolFrame = function(args) {
  this.protocol = null;
  this.userMsg = null;
  this.reqContent = null;
  this.respContent = null;
  this.quotationItem = null;
  this.seqMsg = null;
  if (args) {
    if (args.protocol !== undefined) {
      this.protocol = args.protocol;
    }
    if (args.userMsg !== undefined) {
      this.userMsg = args.userMsg;
    }
    if (args.reqContent !== undefined) {
      this.reqContent = args.reqContent;
    }
    if (args.respContent !== undefined) {
      this.respContent = args.respContent;
    }
    if (args.quotationItem !== undefined) {
      this.quotationItem = args.quotationItem;
    }
    if (args.seqMsg !== undefined) {
      this.seqMsg = args.seqMsg;
    }
  }
};
xueqiao.trade.hosting.push.protocol.ProtocolFrame.prototype = {};
xueqiao.trade.hosting.push.protocol.ProtocolFrame.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.protocol = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.userMsg = new xueqiao.trade.hosting.push.protocol.UserMsgContent();
        this.userMsg.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.reqContent = new xueqiao.trade.hosting.push.protocol.ReqContent();
        this.reqContent.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.respContent = new xueqiao.trade.hosting.push.protocol.RespContent();
        this.respContent.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRUCT) {
        this.quotationItem = new xueqiao.quotation.QuotationItem();
        this.quotationItem.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRUCT) {
        this.seqMsg = new xueqiao.trade.hosting.push.protocol.SeqMsgContent();
        this.seqMsg.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.ProtocolFrame.prototype.write = function(output) {
  output.writeStructBegin('ProtocolFrame');
  if (this.protocol !== null && this.protocol !== undefined) {
    output.writeFieldBegin('protocol', Thrift.Type.I32, 1);
    output.writeI32(this.protocol);
    output.writeFieldEnd();
  }
  if (this.userMsg !== null && this.userMsg !== undefined) {
    output.writeFieldBegin('userMsg', Thrift.Type.STRUCT, 2);
    this.userMsg.write(output);
    output.writeFieldEnd();
  }
  if (this.reqContent !== null && this.reqContent !== undefined) {
    output.writeFieldBegin('reqContent', Thrift.Type.STRUCT, 3);
    this.reqContent.write(output);
    output.writeFieldEnd();
  }
  if (this.respContent !== null && this.respContent !== undefined) {
    output.writeFieldBegin('respContent', Thrift.Type.STRUCT, 4);
    this.respContent.write(output);
    output.writeFieldEnd();
  }
  if (this.quotationItem !== null && this.quotationItem !== undefined) {
    output.writeFieldBegin('quotationItem', Thrift.Type.STRUCT, 5);
    this.quotationItem.write(output);
    output.writeFieldEnd();
  }
  if (this.seqMsg !== null && this.seqMsg !== undefined) {
    output.writeFieldBegin('seqMsg', Thrift.Type.STRUCT, 6);
    this.seqMsg.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.QuotationTopic = function(args) {
  this.platform = null;
  this.contractSymbol = null;
  if (args) {
    if (args.platform !== undefined) {
      this.platform = args.platform;
    }
    if (args.contractSymbol !== undefined) {
      this.contractSymbol = args.contractSymbol;
    }
  }
};
xueqiao.trade.hosting.push.protocol.QuotationTopic.prototype = {};
xueqiao.trade.hosting.push.protocol.QuotationTopic.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.platform = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.contractSymbol = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.QuotationTopic.prototype.write = function(output) {
  output.writeStructBegin('QuotationTopic');
  if (this.platform !== null && this.platform !== undefined) {
    output.writeFieldBegin('platform', Thrift.Type.STRING, 1);
    output.writeString(this.platform);
    output.writeFieldEnd();
  }
  if (this.contractSymbol !== null && this.contractSymbol !== undefined) {
    output.writeFieldBegin('contractSymbol', Thrift.Type.STRING, 2);
    output.writeString(this.contractSymbol);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.QuotationSubscribeReq = function(args) {
  this.topics = null;
  if (args) {
    if (args.topics !== undefined) {
      this.topics = args.topics;
    }
  }
};
xueqiao.trade.hosting.push.protocol.QuotationSubscribeReq.prototype = {};
xueqiao.trade.hosting.push.protocol.QuotationSubscribeReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.topics = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new xueqiao.trade.hosting.push.protocol.QuotationTopic();
          elem6.read(input);
          this.topics.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.QuotationSubscribeReq.prototype.write = function(output) {
  output.writeStructBegin('QuotationSubscribeReq');
  if (this.topics !== null && this.topics !== undefined) {
    output.writeFieldBegin('topics', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.topics.length);
    for (var iter7 in this.topics)
    {
      if (this.topics.hasOwnProperty(iter7))
      {
        iter7 = this.topics[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.QuotationUnSubscribeReq = function(args) {
  this.topics = null;
  if (args) {
    if (args.topics !== undefined) {
      this.topics = args.topics;
    }
  }
};
xueqiao.trade.hosting.push.protocol.QuotationUnSubscribeReq.prototype = {};
xueqiao.trade.hosting.push.protocol.QuotationUnSubscribeReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.topics = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new xueqiao.trade.hosting.push.protocol.QuotationTopic();
          elem14.read(input);
          this.topics.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.QuotationUnSubscribeReq.prototype.write = function(output) {
  output.writeStructBegin('QuotationUnSubscribeReq');
  if (this.topics !== null && this.topics !== undefined) {
    output.writeFieldBegin('topics', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.topics.length);
    for (var iter15 in this.topics)
    {
      if (this.topics.hasOwnProperty(iter15))
      {
        iter15 = this.topics[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.HeartBeatReq = function(args) {
  this.machineId = null;
  this.subUserId = null;
  this.token = null;
  if (args) {
    if (args.machineId !== undefined) {
      this.machineId = args.machineId;
    }
    if (args.subUserId !== undefined) {
      this.subUserId = args.subUserId;
    }
    if (args.token !== undefined) {
      this.token = args.token;
    }
  }
};
xueqiao.trade.hosting.push.protocol.HeartBeatReq.prototype = {};
xueqiao.trade.hosting.push.protocol.HeartBeatReq.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.machineId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.subUserId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.token = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.HeartBeatReq.prototype.write = function(output) {
  output.writeStructBegin('HeartBeatReq');
  if (this.machineId !== null && this.machineId !== undefined) {
    output.writeFieldBegin('machineId', Thrift.Type.I64, 1);
    output.writeI64(this.machineId);
    output.writeFieldEnd();
  }
  if (this.subUserId !== null && this.subUserId !== undefined) {
    output.writeFieldBegin('subUserId', Thrift.Type.I32, 2);
    output.writeI32(this.subUserId);
    output.writeFieldEnd();
  }
  if (this.token !== null && this.token !== undefined) {
    output.writeFieldBegin('token', Thrift.Type.STRING, 3);
    output.writeString(this.token);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.ClientForceSyncEvent = function(args) {
  this.subUserId = null;
  if (args) {
    if (args.subUserId !== undefined) {
      this.subUserId = args.subUserId;
    }
  }
};
xueqiao.trade.hosting.push.protocol.ClientForceSyncEvent.prototype = {};
xueqiao.trade.hosting.push.protocol.ClientForceSyncEvent.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.subUserId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.ClientForceSyncEvent.prototype.write = function(output) {
  output.writeStructBegin('ClientForceSyncEvent');
  if (this.subUserId !== null && this.subUserId !== undefined) {
    output.writeFieldBegin('subUserId', Thrift.Type.I32, 1);
    output.writeI32(this.subUserId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

xueqiao.trade.hosting.push.protocol.SEQ_ALIGN_TYPE = '#SEQALIGN#';

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.trade.hosting.push.protocol;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 协议帧的数据结构
 */
public class ProtocolFrame implements org.apache.thrift.TBase<ProtocolFrame, ProtocolFrame._Fields>, java.io.Serializable, Cloneable, Comparable<ProtocolFrame> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ProtocolFrame");

  private static final org.apache.thrift.protocol.TField PROTOCOL_FIELD_DESC = new org.apache.thrift.protocol.TField("protocol", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("userMsg", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField REQ_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("reqContent", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField RESP_CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("respContent", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField QUOTATION_ITEM_FIELD_DESC = new org.apache.thrift.protocol.TField("quotationItem", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField SEQ_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("seqMsg", org.apache.thrift.protocol.TType.STRUCT, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ProtocolFrameStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ProtocolFrameTupleSchemeFactory());
  }

  /**
   * 
   * @see ProtocolType
   */
  public ProtocolType protocol; // required
  public UserMsgContent userMsg; // optional
  public ReqContent reqContent; // optional
  public RespContent respContent; // optional
  public xueqiao.quotation.QuotationItem quotationItem; // optional
  public SeqMsgContent seqMsg; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see ProtocolType
     */
    PROTOCOL((short)1, "protocol"),
    USER_MSG((short)2, "userMsg"),
    REQ_CONTENT((short)3, "reqContent"),
    RESP_CONTENT((short)4, "respContent"),
    QUOTATION_ITEM((short)5, "quotationItem"),
    SEQ_MSG((short)6, "seqMsg");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROTOCOL
          return PROTOCOL;
        case 2: // USER_MSG
          return USER_MSG;
        case 3: // REQ_CONTENT
          return REQ_CONTENT;
        case 4: // RESP_CONTENT
          return RESP_CONTENT;
        case 5: // QUOTATION_ITEM
          return QUOTATION_ITEM;
        case 6: // SEQ_MSG
          return SEQ_MSG;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.USER_MSG,_Fields.REQ_CONTENT,_Fields.RESP_CONTENT,_Fields.QUOTATION_ITEM,_Fields.SEQ_MSG};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROTOCOL, new org.apache.thrift.meta_data.FieldMetaData("protocol", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ProtocolType.class)));
    tmpMap.put(_Fields.USER_MSG, new org.apache.thrift.meta_data.FieldMetaData("userMsg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, UserMsgContent.class)));
    tmpMap.put(_Fields.REQ_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("reqContent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ReqContent.class)));
    tmpMap.put(_Fields.RESP_CONTENT, new org.apache.thrift.meta_data.FieldMetaData("respContent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RespContent.class)));
    tmpMap.put(_Fields.QUOTATION_ITEM, new org.apache.thrift.meta_data.FieldMetaData("quotationItem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.quotation.QuotationItem.class)));
    tmpMap.put(_Fields.SEQ_MSG, new org.apache.thrift.meta_data.FieldMetaData("seqMsg", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SeqMsgContent.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ProtocolFrame.class, metaDataMap);
  }

  public ProtocolFrame() {
  }

  public ProtocolFrame(
    ProtocolType protocol)
  {
    this();
    this.protocol = protocol;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ProtocolFrame(ProtocolFrame other) {
    if (other.isSetProtocol()) {
      this.protocol = other.protocol;
    }
    if (other.isSetUserMsg()) {
      this.userMsg = new UserMsgContent(other.userMsg);
    }
    if (other.isSetReqContent()) {
      this.reqContent = new ReqContent(other.reqContent);
    }
    if (other.isSetRespContent()) {
      this.respContent = new RespContent(other.respContent);
    }
    if (other.isSetQuotationItem()) {
      this.quotationItem = new xueqiao.quotation.QuotationItem(other.quotationItem);
    }
    if (other.isSetSeqMsg()) {
      this.seqMsg = new SeqMsgContent(other.seqMsg);
    }
  }

  public ProtocolFrame deepCopy() {
    return new ProtocolFrame(this);
  }

  @Override
  public void clear() {
    this.protocol = null;
    this.userMsg = null;
    this.reqContent = null;
    this.respContent = null;
    this.quotationItem = null;
    this.seqMsg = null;
  }

  /**
   * 
   * @see ProtocolType
   */
  public ProtocolType getProtocol() {
    return this.protocol;
  }

  /**
   * 
   * @see ProtocolType
   */
  public ProtocolFrame setProtocol(ProtocolType protocol) {
    this.protocol = protocol;
    return this;
  }

  public void unsetProtocol() {
    this.protocol = null;
  }

  /** Returns true if field protocol is set (has been assigned a value) and false otherwise */
  public boolean isSetProtocol() {
    return this.protocol != null;
  }

  public void setProtocolIsSet(boolean value) {
    if (!value) {
      this.protocol = null;
    }
  }

  public UserMsgContent getUserMsg() {
    return this.userMsg;
  }

  public ProtocolFrame setUserMsg(UserMsgContent userMsg) {
    this.userMsg = userMsg;
    return this;
  }

  public void unsetUserMsg() {
    this.userMsg = null;
  }

  /** Returns true if field userMsg is set (has been assigned a value) and false otherwise */
  public boolean isSetUserMsg() {
    return this.userMsg != null;
  }

  public void setUserMsgIsSet(boolean value) {
    if (!value) {
      this.userMsg = null;
    }
  }

  public ReqContent getReqContent() {
    return this.reqContent;
  }

  public ProtocolFrame setReqContent(ReqContent reqContent) {
    this.reqContent = reqContent;
    return this;
  }

  public void unsetReqContent() {
    this.reqContent = null;
  }

  /** Returns true if field reqContent is set (has been assigned a value) and false otherwise */
  public boolean isSetReqContent() {
    return this.reqContent != null;
  }

  public void setReqContentIsSet(boolean value) {
    if (!value) {
      this.reqContent = null;
    }
  }

  public RespContent getRespContent() {
    return this.respContent;
  }

  public ProtocolFrame setRespContent(RespContent respContent) {
    this.respContent = respContent;
    return this;
  }

  public void unsetRespContent() {
    this.respContent = null;
  }

  /** Returns true if field respContent is set (has been assigned a value) and false otherwise */
  public boolean isSetRespContent() {
    return this.respContent != null;
  }

  public void setRespContentIsSet(boolean value) {
    if (!value) {
      this.respContent = null;
    }
  }

  public xueqiao.quotation.QuotationItem getQuotationItem() {
    return this.quotationItem;
  }

  public ProtocolFrame setQuotationItem(xueqiao.quotation.QuotationItem quotationItem) {
    this.quotationItem = quotationItem;
    return this;
  }

  public void unsetQuotationItem() {
    this.quotationItem = null;
  }

  /** Returns true if field quotationItem is set (has been assigned a value) and false otherwise */
  public boolean isSetQuotationItem() {
    return this.quotationItem != null;
  }

  public void setQuotationItemIsSet(boolean value) {
    if (!value) {
      this.quotationItem = null;
    }
  }

  public SeqMsgContent getSeqMsg() {
    return this.seqMsg;
  }

  public ProtocolFrame setSeqMsg(SeqMsgContent seqMsg) {
    this.seqMsg = seqMsg;
    return this;
  }

  public void unsetSeqMsg() {
    this.seqMsg = null;
  }

  /** Returns true if field seqMsg is set (has been assigned a value) and false otherwise */
  public boolean isSetSeqMsg() {
    return this.seqMsg != null;
  }

  public void setSeqMsgIsSet(boolean value) {
    if (!value) {
      this.seqMsg = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROTOCOL:
      if (value == null) {
        unsetProtocol();
      } else {
        setProtocol((ProtocolType)value);
      }
      break;

    case USER_MSG:
      if (value == null) {
        unsetUserMsg();
      } else {
        setUserMsg((UserMsgContent)value);
      }
      break;

    case REQ_CONTENT:
      if (value == null) {
        unsetReqContent();
      } else {
        setReqContent((ReqContent)value);
      }
      break;

    case RESP_CONTENT:
      if (value == null) {
        unsetRespContent();
      } else {
        setRespContent((RespContent)value);
      }
      break;

    case QUOTATION_ITEM:
      if (value == null) {
        unsetQuotationItem();
      } else {
        setQuotationItem((xueqiao.quotation.QuotationItem)value);
      }
      break;

    case SEQ_MSG:
      if (value == null) {
        unsetSeqMsg();
      } else {
        setSeqMsg((SeqMsgContent)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROTOCOL:
      return getProtocol();

    case USER_MSG:
      return getUserMsg();

    case REQ_CONTENT:
      return getReqContent();

    case RESP_CONTENT:
      return getRespContent();

    case QUOTATION_ITEM:
      return getQuotationItem();

    case SEQ_MSG:
      return getSeqMsg();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROTOCOL:
      return isSetProtocol();
    case USER_MSG:
      return isSetUserMsg();
    case REQ_CONTENT:
      return isSetReqContent();
    case RESP_CONTENT:
      return isSetRespContent();
    case QUOTATION_ITEM:
      return isSetQuotationItem();
    case SEQ_MSG:
      return isSetSeqMsg();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ProtocolFrame)
      return this.equals((ProtocolFrame)that);
    return false;
  }

  public boolean equals(ProtocolFrame that) {
    if (that == null)
      return false;

    boolean this_present_protocol = true && this.isSetProtocol();
    boolean that_present_protocol = true && that.isSetProtocol();
    if (this_present_protocol || that_present_protocol) {
      if (!(this_present_protocol && that_present_protocol))
        return false;
      if (!this.protocol.equals(that.protocol))
        return false;
    }

    boolean this_present_userMsg = true && this.isSetUserMsg();
    boolean that_present_userMsg = true && that.isSetUserMsg();
    if (this_present_userMsg || that_present_userMsg) {
      if (!(this_present_userMsg && that_present_userMsg))
        return false;
      if (!this.userMsg.equals(that.userMsg))
        return false;
    }

    boolean this_present_reqContent = true && this.isSetReqContent();
    boolean that_present_reqContent = true && that.isSetReqContent();
    if (this_present_reqContent || that_present_reqContent) {
      if (!(this_present_reqContent && that_present_reqContent))
        return false;
      if (!this.reqContent.equals(that.reqContent))
        return false;
    }

    boolean this_present_respContent = true && this.isSetRespContent();
    boolean that_present_respContent = true && that.isSetRespContent();
    if (this_present_respContent || that_present_respContent) {
      if (!(this_present_respContent && that_present_respContent))
        return false;
      if (!this.respContent.equals(that.respContent))
        return false;
    }

    boolean this_present_quotationItem = true && this.isSetQuotationItem();
    boolean that_present_quotationItem = true && that.isSetQuotationItem();
    if (this_present_quotationItem || that_present_quotationItem) {
      if (!(this_present_quotationItem && that_present_quotationItem))
        return false;
      if (!this.quotationItem.equals(that.quotationItem))
        return false;
    }

    boolean this_present_seqMsg = true && this.isSetSeqMsg();
    boolean that_present_seqMsg = true && that.isSetSeqMsg();
    if (this_present_seqMsg || that_present_seqMsg) {
      if (!(this_present_seqMsg && that_present_seqMsg))
        return false;
      if (!this.seqMsg.equals(that.seqMsg))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ProtocolFrame other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProtocol()).compareTo(other.isSetProtocol());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProtocol()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.protocol, other.protocol);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserMsg()).compareTo(other.isSetUserMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userMsg, other.userMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetReqContent()).compareTo(other.isSetReqContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReqContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reqContent, other.reqContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRespContent()).compareTo(other.isSetRespContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRespContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.respContent, other.respContent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuotationItem()).compareTo(other.isSetQuotationItem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuotationItem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quotationItem, other.quotationItem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSeqMsg()).compareTo(other.isSetSeqMsg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSeqMsg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.seqMsg, other.seqMsg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ProtocolFrame(");
    boolean first = true;

    sb.append("protocol:");
    if (this.protocol == null) {
      sb.append("null");
    } else {
      sb.append(this.protocol);
    }
    first = false;
    if (isSetUserMsg()) {
      if (!first) sb.append(", ");
      sb.append("userMsg:");
      if (this.userMsg == null) {
        sb.append("null");
      } else {
        sb.append(this.userMsg);
      }
      first = false;
    }
    if (isSetReqContent()) {
      if (!first) sb.append(", ");
      sb.append("reqContent:");
      if (this.reqContent == null) {
        sb.append("null");
      } else {
        sb.append(this.reqContent);
      }
      first = false;
    }
    if (isSetRespContent()) {
      if (!first) sb.append(", ");
      sb.append("respContent:");
      if (this.respContent == null) {
        sb.append("null");
      } else {
        sb.append(this.respContent);
      }
      first = false;
    }
    if (isSetQuotationItem()) {
      if (!first) sb.append(", ");
      sb.append("quotationItem:");
      if (this.quotationItem == null) {
        sb.append("null");
      } else {
        sb.append(this.quotationItem);
      }
      first = false;
    }
    if (isSetSeqMsg()) {
      if (!first) sb.append(", ");
      sb.append("seqMsg:");
      if (this.seqMsg == null) {
        sb.append("null");
      } else {
        sb.append(this.seqMsg);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (protocol == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'protocol' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (userMsg != null) {
      userMsg.validate();
    }
    if (reqContent != null) {
      reqContent.validate();
    }
    if (respContent != null) {
      respContent.validate();
    }
    if (quotationItem != null) {
      quotationItem.validate();
    }
    if (seqMsg != null) {
      seqMsg.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ProtocolFrameStandardSchemeFactory implements SchemeFactory {
    public ProtocolFrameStandardScheme getScheme() {
      return new ProtocolFrameStandardScheme();
    }
  }

  private static class ProtocolFrameStandardScheme extends StandardScheme<ProtocolFrame> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ProtocolFrame struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROTOCOL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.protocol = ProtocolType.findByValue(iprot.readI32());
              struct.setProtocolIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.userMsg = new UserMsgContent();
              struct.userMsg.read(iprot);
              struct.setUserMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REQ_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.reqContent = new ReqContent();
              struct.reqContent.read(iprot);
              struct.setReqContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RESP_CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.respContent = new RespContent();
              struct.respContent.read(iprot);
              struct.setRespContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // QUOTATION_ITEM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.quotationItem = new xueqiao.quotation.QuotationItem();
              struct.quotationItem.read(iprot);
              struct.setQuotationItemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SEQ_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.seqMsg = new SeqMsgContent();
              struct.seqMsg.read(iprot);
              struct.setSeqMsgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ProtocolFrame struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.protocol != null) {
        oprot.writeFieldBegin(PROTOCOL_FIELD_DESC);
        oprot.writeI32(struct.protocol.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.userMsg != null) {
        if (struct.isSetUserMsg()) {
          oprot.writeFieldBegin(USER_MSG_FIELD_DESC);
          struct.userMsg.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.reqContent != null) {
        if (struct.isSetReqContent()) {
          oprot.writeFieldBegin(REQ_CONTENT_FIELD_DESC);
          struct.reqContent.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.respContent != null) {
        if (struct.isSetRespContent()) {
          oprot.writeFieldBegin(RESP_CONTENT_FIELD_DESC);
          struct.respContent.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.quotationItem != null) {
        if (struct.isSetQuotationItem()) {
          oprot.writeFieldBegin(QUOTATION_ITEM_FIELD_DESC);
          struct.quotationItem.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.seqMsg != null) {
        if (struct.isSetSeqMsg()) {
          oprot.writeFieldBegin(SEQ_MSG_FIELD_DESC);
          struct.seqMsg.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ProtocolFrameTupleSchemeFactory implements SchemeFactory {
    public ProtocolFrameTupleScheme getScheme() {
      return new ProtocolFrameTupleScheme();
    }
  }

  private static class ProtocolFrameTupleScheme extends TupleScheme<ProtocolFrame> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ProtocolFrame struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.protocol.getValue());
      BitSet optionals = new BitSet();
      if (struct.isSetUserMsg()) {
        optionals.set(0);
      }
      if (struct.isSetReqContent()) {
        optionals.set(1);
      }
      if (struct.isSetRespContent()) {
        optionals.set(2);
      }
      if (struct.isSetQuotationItem()) {
        optionals.set(3);
      }
      if (struct.isSetSeqMsg()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetUserMsg()) {
        struct.userMsg.write(oprot);
      }
      if (struct.isSetReqContent()) {
        struct.reqContent.write(oprot);
      }
      if (struct.isSetRespContent()) {
        struct.respContent.write(oprot);
      }
      if (struct.isSetQuotationItem()) {
        struct.quotationItem.write(oprot);
      }
      if (struct.isSetSeqMsg()) {
        struct.seqMsg.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ProtocolFrame struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.protocol = ProtocolType.findByValue(iprot.readI32());
      struct.setProtocolIsSet(true);
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.userMsg = new UserMsgContent();
        struct.userMsg.read(iprot);
        struct.setUserMsgIsSet(true);
      }
      if (incoming.get(1)) {
        struct.reqContent = new ReqContent();
        struct.reqContent.read(iprot);
        struct.setReqContentIsSet(true);
      }
      if (incoming.get(2)) {
        struct.respContent = new RespContent();
        struct.respContent.read(iprot);
        struct.setRespContentIsSet(true);
      }
      if (incoming.get(3)) {
        struct.quotationItem = new xueqiao.quotation.QuotationItem();
        struct.quotationItem.read(iprot);
        struct.setQuotationItemIsSet(true);
      }
      if (incoming.get(4)) {
        struct.seqMsg = new SeqMsgContent();
        struct.seqMsg.read(iprot);
        struct.setSeqMsgIsSet(true);
      }
    }
  }

}


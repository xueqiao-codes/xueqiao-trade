/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.company;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class QueryCompanyOption implements org.apache.thrift.TBase<QueryCompanyOption, QueryCompanyOption._Fields>, java.io.Serializable, Cloneable, Comparable<QueryCompanyOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QueryCompanyOption");

  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField COMPANY_CODE_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("companyCodePartical", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_CODE_WHOLE_FIELD_DESC = new org.apache.thrift.protocol.TField("companyCodeWhole", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("companyNamePartical", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EMAIL_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("emailPartical", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField EMAIL_WHOLE_FIELD_DESC = new org.apache.thrift.protocol.TField("emailWhole", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PHONE_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("phonePartical", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PHONE_WHOLE_FIELD_DESC = new org.apache.thrift.protocol.TField("phoneWhole", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QueryCompanyOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QueryCompanyOptionTupleSchemeFactory());
  }

  public int companyId; // optional
  public String companyCodePartical; // optional
  public String companyCodeWhole; // optional
  public String companyNamePartical; // optional
  public String emailPartical; // optional
  public String emailWhole; // optional
  public String phonePartical; // optional
  public String phoneWhole; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    COMPANY_ID((short)1, "companyId"),
    COMPANY_CODE_PARTICAL((short)2, "companyCodePartical"),
    COMPANY_CODE_WHOLE((short)3, "companyCodeWhole"),
    COMPANY_NAME_PARTICAL((short)4, "companyNamePartical"),
    EMAIL_PARTICAL((short)5, "emailPartical"),
    EMAIL_WHOLE((short)6, "emailWhole"),
    PHONE_PARTICAL((short)7, "phonePartical"),
    PHONE_WHOLE((short)8, "phoneWhole");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMPANY_ID
          return COMPANY_ID;
        case 2: // COMPANY_CODE_PARTICAL
          return COMPANY_CODE_PARTICAL;
        case 3: // COMPANY_CODE_WHOLE
          return COMPANY_CODE_WHOLE;
        case 4: // COMPANY_NAME_PARTICAL
          return COMPANY_NAME_PARTICAL;
        case 5: // EMAIL_PARTICAL
          return EMAIL_PARTICAL;
        case 6: // EMAIL_WHOLE
          return EMAIL_WHOLE;
        case 7: // PHONE_PARTICAL
          return PHONE_PARTICAL;
        case 8: // PHONE_WHOLE
          return PHONE_WHOLE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __COMPANYID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.COMPANY_ID,_Fields.COMPANY_CODE_PARTICAL,_Fields.COMPANY_CODE_WHOLE,_Fields.COMPANY_NAME_PARTICAL,_Fields.EMAIL_PARTICAL,_Fields.EMAIL_WHOLE,_Fields.PHONE_PARTICAL,_Fields.PHONE_WHOLE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_CODE_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("companyCodePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_CODE_WHOLE, new org.apache.thrift.meta_data.FieldMetaData("companyCodeWhole", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("companyNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("emailPartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL_WHOLE, new org.apache.thrift.meta_data.FieldMetaData("emailWhole", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("phonePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE_WHOLE, new org.apache.thrift.meta_data.FieldMetaData("phoneWhole", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QueryCompanyOption.class, metaDataMap);
  }

  public QueryCompanyOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QueryCompanyOption(QueryCompanyOption other) {
    __isset_bitfield = other.__isset_bitfield;
    this.companyId = other.companyId;
    if (other.isSetCompanyCodePartical()) {
      this.companyCodePartical = other.companyCodePartical;
    }
    if (other.isSetCompanyCodeWhole()) {
      this.companyCodeWhole = other.companyCodeWhole;
    }
    if (other.isSetCompanyNamePartical()) {
      this.companyNamePartical = other.companyNamePartical;
    }
    if (other.isSetEmailPartical()) {
      this.emailPartical = other.emailPartical;
    }
    if (other.isSetEmailWhole()) {
      this.emailWhole = other.emailWhole;
    }
    if (other.isSetPhonePartical()) {
      this.phonePartical = other.phonePartical;
    }
    if (other.isSetPhoneWhole()) {
      this.phoneWhole = other.phoneWhole;
    }
  }

  public QueryCompanyOption deepCopy() {
    return new QueryCompanyOption(this);
  }

  @Override
  public void clear() {
    setCompanyIdIsSet(false);
    this.companyId = 0;
    this.companyCodePartical = null;
    this.companyCodeWhole = null;
    this.companyNamePartical = null;
    this.emailPartical = null;
    this.emailWhole = null;
    this.phonePartical = null;
    this.phoneWhole = null;
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public QueryCompanyOption setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public String getCompanyCodePartical() {
    return this.companyCodePartical;
  }

  public QueryCompanyOption setCompanyCodePartical(String companyCodePartical) {
    this.companyCodePartical = companyCodePartical;
    return this;
  }

  public void unsetCompanyCodePartical() {
    this.companyCodePartical = null;
  }

  /** Returns true if field companyCodePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyCodePartical() {
    return this.companyCodePartical != null;
  }

  public void setCompanyCodeParticalIsSet(boolean value) {
    if (!value) {
      this.companyCodePartical = null;
    }
  }

  public String getCompanyCodeWhole() {
    return this.companyCodeWhole;
  }

  public QueryCompanyOption setCompanyCodeWhole(String companyCodeWhole) {
    this.companyCodeWhole = companyCodeWhole;
    return this;
  }

  public void unsetCompanyCodeWhole() {
    this.companyCodeWhole = null;
  }

  /** Returns true if field companyCodeWhole is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyCodeWhole() {
    return this.companyCodeWhole != null;
  }

  public void setCompanyCodeWholeIsSet(boolean value) {
    if (!value) {
      this.companyCodeWhole = null;
    }
  }

  public String getCompanyNamePartical() {
    return this.companyNamePartical;
  }

  public QueryCompanyOption setCompanyNamePartical(String companyNamePartical) {
    this.companyNamePartical = companyNamePartical;
    return this;
  }

  public void unsetCompanyNamePartical() {
    this.companyNamePartical = null;
  }

  /** Returns true if field companyNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyNamePartical() {
    return this.companyNamePartical != null;
  }

  public void setCompanyNameParticalIsSet(boolean value) {
    if (!value) {
      this.companyNamePartical = null;
    }
  }

  public String getEmailPartical() {
    return this.emailPartical;
  }

  public QueryCompanyOption setEmailPartical(String emailPartical) {
    this.emailPartical = emailPartical;
    return this;
  }

  public void unsetEmailPartical() {
    this.emailPartical = null;
  }

  /** Returns true if field emailPartical is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailPartical() {
    return this.emailPartical != null;
  }

  public void setEmailParticalIsSet(boolean value) {
    if (!value) {
      this.emailPartical = null;
    }
  }

  public String getEmailWhole() {
    return this.emailWhole;
  }

  public QueryCompanyOption setEmailWhole(String emailWhole) {
    this.emailWhole = emailWhole;
    return this;
  }

  public void unsetEmailWhole() {
    this.emailWhole = null;
  }

  /** Returns true if field emailWhole is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailWhole() {
    return this.emailWhole != null;
  }

  public void setEmailWholeIsSet(boolean value) {
    if (!value) {
      this.emailWhole = null;
    }
  }

  public String getPhonePartical() {
    return this.phonePartical;
  }

  public QueryCompanyOption setPhonePartical(String phonePartical) {
    this.phonePartical = phonePartical;
    return this;
  }

  public void unsetPhonePartical() {
    this.phonePartical = null;
  }

  /** Returns true if field phonePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetPhonePartical() {
    return this.phonePartical != null;
  }

  public void setPhoneParticalIsSet(boolean value) {
    if (!value) {
      this.phonePartical = null;
    }
  }

  public String getPhoneWhole() {
    return this.phoneWhole;
  }

  public QueryCompanyOption setPhoneWhole(String phoneWhole) {
    this.phoneWhole = phoneWhole;
    return this;
  }

  public void unsetPhoneWhole() {
    this.phoneWhole = null;
  }

  /** Returns true if field phoneWhole is set (has been assigned a value) and false otherwise */
  public boolean isSetPhoneWhole() {
    return this.phoneWhole != null;
  }

  public void setPhoneWholeIsSet(boolean value) {
    if (!value) {
      this.phoneWhole = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Integer)value);
      }
      break;

    case COMPANY_CODE_PARTICAL:
      if (value == null) {
        unsetCompanyCodePartical();
      } else {
        setCompanyCodePartical((String)value);
      }
      break;

    case COMPANY_CODE_WHOLE:
      if (value == null) {
        unsetCompanyCodeWhole();
      } else {
        setCompanyCodeWhole((String)value);
      }
      break;

    case COMPANY_NAME_PARTICAL:
      if (value == null) {
        unsetCompanyNamePartical();
      } else {
        setCompanyNamePartical((String)value);
      }
      break;

    case EMAIL_PARTICAL:
      if (value == null) {
        unsetEmailPartical();
      } else {
        setEmailPartical((String)value);
      }
      break;

    case EMAIL_WHOLE:
      if (value == null) {
        unsetEmailWhole();
      } else {
        setEmailWhole((String)value);
      }
      break;

    case PHONE_PARTICAL:
      if (value == null) {
        unsetPhonePartical();
      } else {
        setPhonePartical((String)value);
      }
      break;

    case PHONE_WHOLE:
      if (value == null) {
        unsetPhoneWhole();
      } else {
        setPhoneWhole((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case COMPANY_ID:
      return Integer.valueOf(getCompanyId());

    case COMPANY_CODE_PARTICAL:
      return getCompanyCodePartical();

    case COMPANY_CODE_WHOLE:
      return getCompanyCodeWhole();

    case COMPANY_NAME_PARTICAL:
      return getCompanyNamePartical();

    case EMAIL_PARTICAL:
      return getEmailPartical();

    case EMAIL_WHOLE:
      return getEmailWhole();

    case PHONE_PARTICAL:
      return getPhonePartical();

    case PHONE_WHOLE:
      return getPhoneWhole();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case COMPANY_ID:
      return isSetCompanyId();
    case COMPANY_CODE_PARTICAL:
      return isSetCompanyCodePartical();
    case COMPANY_CODE_WHOLE:
      return isSetCompanyCodeWhole();
    case COMPANY_NAME_PARTICAL:
      return isSetCompanyNamePartical();
    case EMAIL_PARTICAL:
      return isSetEmailPartical();
    case EMAIL_WHOLE:
      return isSetEmailWhole();
    case PHONE_PARTICAL:
      return isSetPhonePartical();
    case PHONE_WHOLE:
      return isSetPhoneWhole();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QueryCompanyOption)
      return this.equals((QueryCompanyOption)that);
    return false;
  }

  public boolean equals(QueryCompanyOption that) {
    if (that == null)
      return false;

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_companyCodePartical = true && this.isSetCompanyCodePartical();
    boolean that_present_companyCodePartical = true && that.isSetCompanyCodePartical();
    if (this_present_companyCodePartical || that_present_companyCodePartical) {
      if (!(this_present_companyCodePartical && that_present_companyCodePartical))
        return false;
      if (!this.companyCodePartical.equals(that.companyCodePartical))
        return false;
    }

    boolean this_present_companyCodeWhole = true && this.isSetCompanyCodeWhole();
    boolean that_present_companyCodeWhole = true && that.isSetCompanyCodeWhole();
    if (this_present_companyCodeWhole || that_present_companyCodeWhole) {
      if (!(this_present_companyCodeWhole && that_present_companyCodeWhole))
        return false;
      if (!this.companyCodeWhole.equals(that.companyCodeWhole))
        return false;
    }

    boolean this_present_companyNamePartical = true && this.isSetCompanyNamePartical();
    boolean that_present_companyNamePartical = true && that.isSetCompanyNamePartical();
    if (this_present_companyNamePartical || that_present_companyNamePartical) {
      if (!(this_present_companyNamePartical && that_present_companyNamePartical))
        return false;
      if (!this.companyNamePartical.equals(that.companyNamePartical))
        return false;
    }

    boolean this_present_emailPartical = true && this.isSetEmailPartical();
    boolean that_present_emailPartical = true && that.isSetEmailPartical();
    if (this_present_emailPartical || that_present_emailPartical) {
      if (!(this_present_emailPartical && that_present_emailPartical))
        return false;
      if (!this.emailPartical.equals(that.emailPartical))
        return false;
    }

    boolean this_present_emailWhole = true && this.isSetEmailWhole();
    boolean that_present_emailWhole = true && that.isSetEmailWhole();
    if (this_present_emailWhole || that_present_emailWhole) {
      if (!(this_present_emailWhole && that_present_emailWhole))
        return false;
      if (!this.emailWhole.equals(that.emailWhole))
        return false;
    }

    boolean this_present_phonePartical = true && this.isSetPhonePartical();
    boolean that_present_phonePartical = true && that.isSetPhonePartical();
    if (this_present_phonePartical || that_present_phonePartical) {
      if (!(this_present_phonePartical && that_present_phonePartical))
        return false;
      if (!this.phonePartical.equals(that.phonePartical))
        return false;
    }

    boolean this_present_phoneWhole = true && this.isSetPhoneWhole();
    boolean that_present_phoneWhole = true && that.isSetPhoneWhole();
    if (this_present_phoneWhole || that_present_phoneWhole) {
      if (!(this_present_phoneWhole && that_present_phoneWhole))
        return false;
      if (!this.phoneWhole.equals(that.phoneWhole))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(QueryCompanyOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyCodePartical()).compareTo(other.isSetCompanyCodePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyCodePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyCodePartical, other.companyCodePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyCodeWhole()).compareTo(other.isSetCompanyCodeWhole());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyCodeWhole()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyCodeWhole, other.companyCodeWhole);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyNamePartical()).compareTo(other.isSetCompanyNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyNamePartical, other.companyNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailPartical()).compareTo(other.isSetEmailPartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailPartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailPartical, other.emailPartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailWhole()).compareTo(other.isSetEmailWhole());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailWhole()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailWhole, other.emailWhole);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhonePartical()).compareTo(other.isSetPhonePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhonePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phonePartical, other.phonePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhoneWhole()).compareTo(other.isSetPhoneWhole());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhoneWhole()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phoneWhole, other.phoneWhole);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QueryCompanyOption(");
    boolean first = true;

    if (isSetCompanyId()) {
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetCompanyCodePartical()) {
      if (!first) sb.append(", ");
      sb.append("companyCodePartical:");
      if (this.companyCodePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.companyCodePartical);
      }
      first = false;
    }
    if (isSetCompanyCodeWhole()) {
      if (!first) sb.append(", ");
      sb.append("companyCodeWhole:");
      if (this.companyCodeWhole == null) {
        sb.append("null");
      } else {
        sb.append(this.companyCodeWhole);
      }
      first = false;
    }
    if (isSetCompanyNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("companyNamePartical:");
      if (this.companyNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.companyNamePartical);
      }
      first = false;
    }
    if (isSetEmailPartical()) {
      if (!first) sb.append(", ");
      sb.append("emailPartical:");
      if (this.emailPartical == null) {
        sb.append("null");
      } else {
        sb.append(this.emailPartical);
      }
      first = false;
    }
    if (isSetEmailWhole()) {
      if (!first) sb.append(", ");
      sb.append("emailWhole:");
      if (this.emailWhole == null) {
        sb.append("null");
      } else {
        sb.append(this.emailWhole);
      }
      first = false;
    }
    if (isSetPhonePartical()) {
      if (!first) sb.append(", ");
      sb.append("phonePartical:");
      if (this.phonePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.phonePartical);
      }
      first = false;
    }
    if (isSetPhoneWhole()) {
      if (!first) sb.append(", ");
      sb.append("phoneWhole:");
      if (this.phoneWhole == null) {
        sb.append("null");
      } else {
        sb.append(this.phoneWhole);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QueryCompanyOptionStandardSchemeFactory implements SchemeFactory {
    public QueryCompanyOptionStandardScheme getScheme() {
      return new QueryCompanyOptionStandardScheme();
    }
  }

  private static class QueryCompanyOptionStandardScheme extends StandardScheme<QueryCompanyOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QueryCompanyOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMPANY_CODE_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyCodePartical = iprot.readString();
              struct.setCompanyCodeParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY_CODE_WHOLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyCodeWhole = iprot.readString();
              struct.setCompanyCodeWholeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMPANY_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyNamePartical = iprot.readString();
              struct.setCompanyNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EMAIL_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailPartical = iprot.readString();
              struct.setEmailParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EMAIL_WHOLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailWhole = iprot.readString();
              struct.setEmailWholeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PHONE_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phonePartical = iprot.readString();
              struct.setPhoneParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PHONE_WHOLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phoneWhole = iprot.readString();
              struct.setPhoneWholeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QueryCompanyOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.companyCodePartical != null) {
        if (struct.isSetCompanyCodePartical()) {
          oprot.writeFieldBegin(COMPANY_CODE_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.companyCodePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyCodeWhole != null) {
        if (struct.isSetCompanyCodeWhole()) {
          oprot.writeFieldBegin(COMPANY_CODE_WHOLE_FIELD_DESC);
          oprot.writeString(struct.companyCodeWhole);
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyNamePartical != null) {
        if (struct.isSetCompanyNamePartical()) {
          oprot.writeFieldBegin(COMPANY_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.companyNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.emailPartical != null) {
        if (struct.isSetEmailPartical()) {
          oprot.writeFieldBegin(EMAIL_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.emailPartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.emailWhole != null) {
        if (struct.isSetEmailWhole()) {
          oprot.writeFieldBegin(EMAIL_WHOLE_FIELD_DESC);
          oprot.writeString(struct.emailWhole);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phonePartical != null) {
        if (struct.isSetPhonePartical()) {
          oprot.writeFieldBegin(PHONE_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.phonePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.phoneWhole != null) {
        if (struct.isSetPhoneWhole()) {
          oprot.writeFieldBegin(PHONE_WHOLE_FIELD_DESC);
          oprot.writeString(struct.phoneWhole);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QueryCompanyOptionTupleSchemeFactory implements SchemeFactory {
    public QueryCompanyOptionTupleScheme getScheme() {
      return new QueryCompanyOptionTupleScheme();
    }
  }

  private static class QueryCompanyOptionTupleScheme extends TupleScheme<QueryCompanyOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QueryCompanyOption struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCompanyId()) {
        optionals.set(0);
      }
      if (struct.isSetCompanyCodePartical()) {
        optionals.set(1);
      }
      if (struct.isSetCompanyCodeWhole()) {
        optionals.set(2);
      }
      if (struct.isSetCompanyNamePartical()) {
        optionals.set(3);
      }
      if (struct.isSetEmailPartical()) {
        optionals.set(4);
      }
      if (struct.isSetEmailWhole()) {
        optionals.set(5);
      }
      if (struct.isSetPhonePartical()) {
        optionals.set(6);
      }
      if (struct.isSetPhoneWhole()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetCompanyCodePartical()) {
        oprot.writeString(struct.companyCodePartical);
      }
      if (struct.isSetCompanyCodeWhole()) {
        oprot.writeString(struct.companyCodeWhole);
      }
      if (struct.isSetCompanyNamePartical()) {
        oprot.writeString(struct.companyNamePartical);
      }
      if (struct.isSetEmailPartical()) {
        oprot.writeString(struct.emailPartical);
      }
      if (struct.isSetEmailWhole()) {
        oprot.writeString(struct.emailWhole);
      }
      if (struct.isSetPhonePartical()) {
        oprot.writeString(struct.phonePartical);
      }
      if (struct.isSetPhoneWhole()) {
        oprot.writeString(struct.phoneWhole);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QueryCompanyOption struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.companyCodePartical = iprot.readString();
        struct.setCompanyCodeParticalIsSet(true);
      }
      if (incoming.get(2)) {
        struct.companyCodeWhole = iprot.readString();
        struct.setCompanyCodeWholeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.companyNamePartical = iprot.readString();
        struct.setCompanyNameParticalIsSet(true);
      }
      if (incoming.get(4)) {
        struct.emailPartical = iprot.readString();
        struct.setEmailParticalIsSet(true);
      }
      if (incoming.get(5)) {
        struct.emailWhole = iprot.readString();
        struct.setEmailWholeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.phonePartical = iprot.readString();
        struct.setPhoneParticalIsSet(true);
      }
      if (incoming.get(7)) {
        struct.phoneWhole = iprot.readString();
        struct.setPhoneWholeIsSet(true);
      }
    }
  }

}


/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.trade.hosting.arbitrage.thriftapi;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum TradeHostingArbitrageErrorCode implements org.apache.thrift.TEnum {
  ERROR_XQ_ORDER_ID_FORMAT(4000),
  ERROR_XQ_ORDER_TYPE_NOT_SUPPORTED(4001),
  ERROR_XQ_ORDER_NOT_EXISTS(4002),
  ERROR_XQ_ORDER_EXISTED(4003),
  ERROR_XQ_ORDER_EFFECT_DATE_TYPE_NOT_SUPPORTED(4004),
  ERROR_XQ_ORDER_PARAM_ILLEGAL_TO_SYSTEM_SETTINGS(4005),
  ERROR_XQ_ORDER_TRADETIME_CONSTRUCT_FAILED(4100),
  ERROR_XQ_ORDER_TRADETIME_NO_RECENT(4101),
  ERROR_XQ_ORDER_SUSPENDED_NOTIN_TRADETIME(4150),
  ERROR_XQ_ORDER_SUSPENDED_BEFORE_EFFECT_TIME_PERIOD(4151),
  ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_VERIFY_FAILED(4199),
  ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_SEND_FAILED(4200),
  ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_CANCELLED_TOO_MANY(4201),
  ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_PRICE_PROTECTED(4202),
  ERROR_XQ_ORDER_SUSPENDED_LEG_LEAK_BUT_TRADE_CLOSE(4203),
  ERROR_XQ_ORDER_SUSPENDED_INNER_STATE_ERROR(4204),
  ERROR_XQ_ORDER_SUSPENDED_INNER_EXCEPTION_OCCURS(4205),
  ERROR_XQ_ORDER_SUSPENDED_OPERATION_INTENT_UNKOWN(4206),
  ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_VERIFY_FAILED(4207),
  ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_SEND_FAILED(4208),
  ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_UPSIDE_REJECTED(4209),
  ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_UPSIDE_CANCELLED(4210),
  ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_UPSIDE_EXPIRED(4211),
  ERROR_XQ_ORDER_TYPE_SUSPEND_NOT_SUPPORTED(4600),
  ERROR_XQ_ORDER_STATE_CANNOT_OPERATION(4601),
  ERROR_XQ_ORDER_NOT_EFFECTIVE_CANNOT_OPERATION(4602),
  ERROR_XQ_ORDER_CANCELLED_STARTED_BUT_AFTER_EFFECT_TIME_PERIOD(4698),
  ERROR_XQ_ORDER_CANCELLED_AFTER_EFFECT_TIME_PERIOD(4699),
  ERROR_XQ_ORDER_CANCELLED_BY_USER(4700),
  ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_VERIFY_FAILED(4701),
  ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_SEND_FAILED(4702),
  ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_UPSIDE_REJECTED(4703),
  ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_UPSIDE_CANCELLED(4704),
  ERROR_XQ_ORDER_CANCELLED_MARKET_CLOSED(4707),
  ERROR_XQ_ORDER_CANCELLED_ANALYSIS_TRADETIME_FAILED(4708),
  ERROR_XQ_ORDER_CANCELLED_MARKET_OPENDED_FOR_PARKED(4709),
  ERROR_XQ_ORDER_CANCELLED_STARTING_TOO_LONG_FOR_PARKED(4710),
  ERROR_XQ_ORDER_CANCELLED_TRIGGER_RUNNING_TOO_LONG_FOR_PARKED(4711),
  ERROR_XQ_ORDER_CANCELLED_COMPOSE_EXEC_TYPE_NOT_SUPPORTED(4712),
  ERROR_XQ_ORDER_CANCELLED_COMPOSE_NO_ACCEPTABLE_FIRSTLEG(4713),
  ERROR_XQ_ORDER_CANCELLED_INNER_EXCEPTION_OCCURS(4714);

  private final int value;

  private TradeHostingArbitrageErrorCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static TradeHostingArbitrageErrorCode findByValue(int value) { 
    switch (value) {
      case 4000:
        return ERROR_XQ_ORDER_ID_FORMAT;
      case 4001:
        return ERROR_XQ_ORDER_TYPE_NOT_SUPPORTED;
      case 4002:
        return ERROR_XQ_ORDER_NOT_EXISTS;
      case 4003:
        return ERROR_XQ_ORDER_EXISTED;
      case 4004:
        return ERROR_XQ_ORDER_EFFECT_DATE_TYPE_NOT_SUPPORTED;
      case 4005:
        return ERROR_XQ_ORDER_PARAM_ILLEGAL_TO_SYSTEM_SETTINGS;
      case 4100:
        return ERROR_XQ_ORDER_TRADETIME_CONSTRUCT_FAILED;
      case 4101:
        return ERROR_XQ_ORDER_TRADETIME_NO_RECENT;
      case 4150:
        return ERROR_XQ_ORDER_SUSPENDED_NOTIN_TRADETIME;
      case 4151:
        return ERROR_XQ_ORDER_SUSPENDED_BEFORE_EFFECT_TIME_PERIOD;
      case 4199:
        return ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_VERIFY_FAILED;
      case 4200:
        return ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_SEND_FAILED;
      case 4201:
        return ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_CANCELLED_TOO_MANY;
      case 4202:
        return ERROR_XQ_ORDER_SUSPENDED_LEG_ORDER_PRICE_PROTECTED;
      case 4203:
        return ERROR_XQ_ORDER_SUSPENDED_LEG_LEAK_BUT_TRADE_CLOSE;
      case 4204:
        return ERROR_XQ_ORDER_SUSPENDED_INNER_STATE_ERROR;
      case 4205:
        return ERROR_XQ_ORDER_SUSPENDED_INNER_EXCEPTION_OCCURS;
      case 4206:
        return ERROR_XQ_ORDER_SUSPENDED_OPERATION_INTENT_UNKOWN;
      case 4207:
        return ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_VERIFY_FAILED;
      case 4208:
        return ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_SEND_FAILED;
      case 4209:
        return ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_UPSIDE_REJECTED;
      case 4210:
        return ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_UPSIDE_CANCELLED;
      case 4211:
        return ERROR_XQ_ORDER_SUSPENDED_EXEC_ORDER_UPSIDE_EXPIRED;
      case 4600:
        return ERROR_XQ_ORDER_TYPE_SUSPEND_NOT_SUPPORTED;
      case 4601:
        return ERROR_XQ_ORDER_STATE_CANNOT_OPERATION;
      case 4602:
        return ERROR_XQ_ORDER_NOT_EFFECTIVE_CANNOT_OPERATION;
      case 4698:
        return ERROR_XQ_ORDER_CANCELLED_STARTED_BUT_AFTER_EFFECT_TIME_PERIOD;
      case 4699:
        return ERROR_XQ_ORDER_CANCELLED_AFTER_EFFECT_TIME_PERIOD;
      case 4700:
        return ERROR_XQ_ORDER_CANCELLED_BY_USER;
      case 4701:
        return ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_VERIFY_FAILED;
      case 4702:
        return ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_SEND_FAILED;
      case 4703:
        return ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_UPSIDE_REJECTED;
      case 4704:
        return ERROR_XQ_ORDER_CANCELLED_EXEC_ORDER_UPSIDE_CANCELLED;
      case 4707:
        return ERROR_XQ_ORDER_CANCELLED_MARKET_CLOSED;
      case 4708:
        return ERROR_XQ_ORDER_CANCELLED_ANALYSIS_TRADETIME_FAILED;
      case 4709:
        return ERROR_XQ_ORDER_CANCELLED_MARKET_OPENDED_FOR_PARKED;
      case 4710:
        return ERROR_XQ_ORDER_CANCELLED_STARTING_TOO_LONG_FOR_PARKED;
      case 4711:
        return ERROR_XQ_ORDER_CANCELLED_TRIGGER_RUNNING_TOO_LONG_FOR_PARKED;
      case 4712:
        return ERROR_XQ_ORDER_CANCELLED_COMPOSE_EXEC_TYPE_NOT_SUPPORTED;
      case 4713:
        return ERROR_XQ_ORDER_CANCELLED_COMPOSE_NO_ACCEPTABLE_FIRSTLEG;
      case 4714:
        return ERROR_XQ_ORDER_CANCELLED_INNER_EXCEPTION_OCCURS;
      default:
        return null;
    }
  }
}

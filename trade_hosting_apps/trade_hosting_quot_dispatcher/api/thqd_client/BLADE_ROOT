cc_config(
    extra_incs=[
        'cpp_platform/thirdparty',
        'cpp_platform/.libs/thrift/include'
    ],
    cflags = [
        '-std=c99',
    ],
    cxxflags=[
        '-std=c++11'
    	, '-D__LINUX__=1'
    	, '-DRAPIDJSON_HAS_STDSTRING=1'
    ],
    warnings = [
        '-Wall',
        '-Wextra',
        # disable some warnings enabled by Wextra
        '-Wno-unused-but-set-variable',
        '-Wno-unused-parameter',
        '-Wno-unused-local-typedefs',
        '-Wno-missing-field-initializers',
        # other useful warnings
        '-Wendif-labels',
        '-Wfloat-equal',
        '-Wformat=2',
        '-Wframe-larger-than=69632', # A 64k buffer and other small vars
        '-Wmissing-include-dirs',
        '-Wpointer-arith',
        '-Wwrite-strings',
        # error flags
        '-Werror=char-subscripts',
        '-Werror=comments',
        '-Werror=conversion-null',
        '-Werror=empty-body',
        '-Werror=endif-labels',
        '-Werror=format',
        #'-Werror=format-nonliteral',
        '-Werror=missing-include-dirs',
        '-Werror=overflow',
        '-Werror=parentheses',
        '-Werror=reorder',
        '-Werror=return-type',
        '-Werror=sequence-point',
        '-Werror=sign-compare',
        '-Werror=switch',
        '-Werror=type-limits',
        '-Werror=uninitialized',
        # Masked it at first
        # '-Werror=unused-function',
        '-Werror=unused-label',
        '-Werror=unused-result',
        '-Werror=unused-value',
        '-Werror=unused-variable',
        '-Werror=write-strings',
    ],
    # C++ only warning flags
    cxx_warnings = [
        '-Wno-invalid-offsetof',
        '-Wnon-virtual-dtor',
        '-Woverloaded-virtual',
        '-Wvla',
        #'-Werror=non-virtual-dtor',
        '-Werror=overloaded-virtual',
        '-Werror=vla',
    ],
    # C only warning flags
    c_warnings = ['-Werror-implicit-function-declaration'],
    cpplint = 'cpplint.py', # Default is unpathed cpplint.py command
    optimize = ['-O2'],
    benchmark_libs=['//toft/base:benchmark'],
    benchmark_main_libs=['//toft/base:benchmark_main'],
    linkflags = [
        '-fPIC'
        ,  '-lpthread'
    ]
)

cc_library_config(
	generate_dynamic = False,
)

thrift_library_config(
    # The path to thrift compiler.
    thrift='thrift',
    # The libraries depended by thrift.
    thrift_libs=['//cpp_platform/thirdparty/thrift:thrift'],
    # The extra include paths to be passed to thrift compiler.
    thrift_incs=['//thrift_include']
)
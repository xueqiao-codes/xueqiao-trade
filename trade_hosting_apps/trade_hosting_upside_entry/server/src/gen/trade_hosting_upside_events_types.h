/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef trade_hosting_upside_events_TYPES_H
#define trade_hosting_upside_events_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>


namespace xueqiao { namespace trade { namespace hosting { namespace events {

typedef struct _UpsidePositionRateDetailsUpdatedEvent__isset {
  _UpsidePositionRateDetailsUpdatedEvent__isset() : tradeAccountId(false) {}
  bool tradeAccountId;
} _UpsidePositionRateDetailsUpdatedEvent__isset;

class UpsidePositionRateDetailsUpdatedEvent {
 public:

  static const char* ascii_fingerprint; // = "148F3AAAC1D9859963D5E800D187BF26";
  static const uint8_t binary_fingerprint[16]; // = {0x14,0x8F,0x3A,0xAA,0xC1,0xD9,0x85,0x99,0x63,0xD5,0xE8,0x00,0xD1,0x87,0xBF,0x26};

  UpsidePositionRateDetailsUpdatedEvent() : tradeAccountId(0) {
  }

  virtual ~UpsidePositionRateDetailsUpdatedEvent() throw() {}

  int64_t tradeAccountId;

  _UpsidePositionRateDetailsUpdatedEvent__isset __isset;

  void __set_tradeAccountId(const int64_t val) {
    tradeAccountId = val;
    __isset.tradeAccountId = true;
  }

  bool operator == (const UpsidePositionRateDetailsUpdatedEvent & rhs) const
  {
    if (__isset.tradeAccountId != rhs.__isset.tradeAccountId)
      return false;
    else if (__isset.tradeAccountId && !(tradeAccountId == rhs.tradeAccountId))
      return false;
    return true;
  }
  bool operator != (const UpsidePositionRateDetailsUpdatedEvent &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const UpsidePositionRateDetailsUpdatedEvent & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(UpsidePositionRateDetailsUpdatedEvent &a, UpsidePositionRateDetailsUpdatedEvent &b);

}}}} // namespace

#endif

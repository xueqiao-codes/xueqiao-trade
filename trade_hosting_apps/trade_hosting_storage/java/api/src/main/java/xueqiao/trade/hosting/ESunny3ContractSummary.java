/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.trade.hosting;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ESunny3ContractSummary implements org.apache.thrift.TBase<ESunny3ContractSummary, ESunny3ContractSummary._Fields>, java.io.Serializable, Cloneable, Comparable<ESunny3ContractSummary> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ESunny3ContractSummary");

  private static final org.apache.thrift.protocol.TField ESUNNY3_EXCHANGE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("esunny3ExchangeCode", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField ESUNNY3_COMMODITY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("esunny3CommodityType", org.apache.thrift.protocol.TType.I16, (short)2);
  private static final org.apache.thrift.protocol.TField ESUNNY3_COMMODITY_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("esunny3CommodityCode", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ESUNNY3_CONTRACT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("esunny3ContractCode", org.apache.thrift.protocol.TType.STRING, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ESunny3ContractSummaryStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ESunny3ContractSummaryTupleSchemeFactory());
  }

  public String esunny3ExchangeCode; // optional
  public short esunny3CommodityType; // optional
  public String esunny3CommodityCode; // optional
  public String esunny3ContractCode; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ESUNNY3_EXCHANGE_CODE((short)1, "esunny3ExchangeCode"),
    ESUNNY3_COMMODITY_TYPE((short)2, "esunny3CommodityType"),
    ESUNNY3_COMMODITY_CODE((short)3, "esunny3CommodityCode"),
    ESUNNY3_CONTRACT_CODE((short)4, "esunny3ContractCode");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ESUNNY3_EXCHANGE_CODE
          return ESUNNY3_EXCHANGE_CODE;
        case 2: // ESUNNY3_COMMODITY_TYPE
          return ESUNNY3_COMMODITY_TYPE;
        case 3: // ESUNNY3_COMMODITY_CODE
          return ESUNNY3_COMMODITY_CODE;
        case 4: // ESUNNY3_CONTRACT_CODE
          return ESUNNY3_CONTRACT_CODE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ESUNNY3COMMODITYTYPE_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ESUNNY3_EXCHANGE_CODE,_Fields.ESUNNY3_COMMODITY_TYPE,_Fields.ESUNNY3_COMMODITY_CODE,_Fields.ESUNNY3_CONTRACT_CODE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ESUNNY3_EXCHANGE_CODE, new org.apache.thrift.meta_data.FieldMetaData("esunny3ExchangeCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ESUNNY3_COMMODITY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("esunny3CommodityType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.ESUNNY3_COMMODITY_CODE, new org.apache.thrift.meta_data.FieldMetaData("esunny3CommodityCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ESUNNY3_CONTRACT_CODE, new org.apache.thrift.meta_data.FieldMetaData("esunny3ContractCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ESunny3ContractSummary.class, metaDataMap);
  }

  public ESunny3ContractSummary() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ESunny3ContractSummary(ESunny3ContractSummary other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetEsunny3ExchangeCode()) {
      this.esunny3ExchangeCode = other.esunny3ExchangeCode;
    }
    this.esunny3CommodityType = other.esunny3CommodityType;
    if (other.isSetEsunny3CommodityCode()) {
      this.esunny3CommodityCode = other.esunny3CommodityCode;
    }
    if (other.isSetEsunny3ContractCode()) {
      this.esunny3ContractCode = other.esunny3ContractCode;
    }
  }

  public ESunny3ContractSummary deepCopy() {
    return new ESunny3ContractSummary(this);
  }

  @Override
  public void clear() {
    this.esunny3ExchangeCode = null;
    setEsunny3CommodityTypeIsSet(false);
    this.esunny3CommodityType = 0;
    this.esunny3CommodityCode = null;
    this.esunny3ContractCode = null;
  }

  public String getEsunny3ExchangeCode() {
    return this.esunny3ExchangeCode;
  }

  public ESunny3ContractSummary setEsunny3ExchangeCode(String esunny3ExchangeCode) {
    this.esunny3ExchangeCode = esunny3ExchangeCode;
    return this;
  }

  public void unsetEsunny3ExchangeCode() {
    this.esunny3ExchangeCode = null;
  }

  /** Returns true if field esunny3ExchangeCode is set (has been assigned a value) and false otherwise */
  public boolean isSetEsunny3ExchangeCode() {
    return this.esunny3ExchangeCode != null;
  }

  public void setEsunny3ExchangeCodeIsSet(boolean value) {
    if (!value) {
      this.esunny3ExchangeCode = null;
    }
  }

  public short getEsunny3CommodityType() {
    return this.esunny3CommodityType;
  }

  public ESunny3ContractSummary setEsunny3CommodityType(short esunny3CommodityType) {
    this.esunny3CommodityType = esunny3CommodityType;
    setEsunny3CommodityTypeIsSet(true);
    return this;
  }

  public void unsetEsunny3CommodityType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ESUNNY3COMMODITYTYPE_ISSET_ID);
  }

  /** Returns true if field esunny3CommodityType is set (has been assigned a value) and false otherwise */
  public boolean isSetEsunny3CommodityType() {
    return EncodingUtils.testBit(__isset_bitfield, __ESUNNY3COMMODITYTYPE_ISSET_ID);
  }

  public void setEsunny3CommodityTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ESUNNY3COMMODITYTYPE_ISSET_ID, value);
  }

  public String getEsunny3CommodityCode() {
    return this.esunny3CommodityCode;
  }

  public ESunny3ContractSummary setEsunny3CommodityCode(String esunny3CommodityCode) {
    this.esunny3CommodityCode = esunny3CommodityCode;
    return this;
  }

  public void unsetEsunny3CommodityCode() {
    this.esunny3CommodityCode = null;
  }

  /** Returns true if field esunny3CommodityCode is set (has been assigned a value) and false otherwise */
  public boolean isSetEsunny3CommodityCode() {
    return this.esunny3CommodityCode != null;
  }

  public void setEsunny3CommodityCodeIsSet(boolean value) {
    if (!value) {
      this.esunny3CommodityCode = null;
    }
  }

  public String getEsunny3ContractCode() {
    return this.esunny3ContractCode;
  }

  public ESunny3ContractSummary setEsunny3ContractCode(String esunny3ContractCode) {
    this.esunny3ContractCode = esunny3ContractCode;
    return this;
  }

  public void unsetEsunny3ContractCode() {
    this.esunny3ContractCode = null;
  }

  /** Returns true if field esunny3ContractCode is set (has been assigned a value) and false otherwise */
  public boolean isSetEsunny3ContractCode() {
    return this.esunny3ContractCode != null;
  }

  public void setEsunny3ContractCodeIsSet(boolean value) {
    if (!value) {
      this.esunny3ContractCode = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ESUNNY3_EXCHANGE_CODE:
      if (value == null) {
        unsetEsunny3ExchangeCode();
      } else {
        setEsunny3ExchangeCode((String)value);
      }
      break;

    case ESUNNY3_COMMODITY_TYPE:
      if (value == null) {
        unsetEsunny3CommodityType();
      } else {
        setEsunny3CommodityType((Short)value);
      }
      break;

    case ESUNNY3_COMMODITY_CODE:
      if (value == null) {
        unsetEsunny3CommodityCode();
      } else {
        setEsunny3CommodityCode((String)value);
      }
      break;

    case ESUNNY3_CONTRACT_CODE:
      if (value == null) {
        unsetEsunny3ContractCode();
      } else {
        setEsunny3ContractCode((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ESUNNY3_EXCHANGE_CODE:
      return getEsunny3ExchangeCode();

    case ESUNNY3_COMMODITY_TYPE:
      return Short.valueOf(getEsunny3CommodityType());

    case ESUNNY3_COMMODITY_CODE:
      return getEsunny3CommodityCode();

    case ESUNNY3_CONTRACT_CODE:
      return getEsunny3ContractCode();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ESUNNY3_EXCHANGE_CODE:
      return isSetEsunny3ExchangeCode();
    case ESUNNY3_COMMODITY_TYPE:
      return isSetEsunny3CommodityType();
    case ESUNNY3_COMMODITY_CODE:
      return isSetEsunny3CommodityCode();
    case ESUNNY3_CONTRACT_CODE:
      return isSetEsunny3ContractCode();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ESunny3ContractSummary)
      return this.equals((ESunny3ContractSummary)that);
    return false;
  }

  public boolean equals(ESunny3ContractSummary that) {
    if (that == null)
      return false;

    boolean this_present_esunny3ExchangeCode = true && this.isSetEsunny3ExchangeCode();
    boolean that_present_esunny3ExchangeCode = true && that.isSetEsunny3ExchangeCode();
    if (this_present_esunny3ExchangeCode || that_present_esunny3ExchangeCode) {
      if (!(this_present_esunny3ExchangeCode && that_present_esunny3ExchangeCode))
        return false;
      if (!this.esunny3ExchangeCode.equals(that.esunny3ExchangeCode))
        return false;
    }

    boolean this_present_esunny3CommodityType = true && this.isSetEsunny3CommodityType();
    boolean that_present_esunny3CommodityType = true && that.isSetEsunny3CommodityType();
    if (this_present_esunny3CommodityType || that_present_esunny3CommodityType) {
      if (!(this_present_esunny3CommodityType && that_present_esunny3CommodityType))
        return false;
      if (this.esunny3CommodityType != that.esunny3CommodityType)
        return false;
    }

    boolean this_present_esunny3CommodityCode = true && this.isSetEsunny3CommodityCode();
    boolean that_present_esunny3CommodityCode = true && that.isSetEsunny3CommodityCode();
    if (this_present_esunny3CommodityCode || that_present_esunny3CommodityCode) {
      if (!(this_present_esunny3CommodityCode && that_present_esunny3CommodityCode))
        return false;
      if (!this.esunny3CommodityCode.equals(that.esunny3CommodityCode))
        return false;
    }

    boolean this_present_esunny3ContractCode = true && this.isSetEsunny3ContractCode();
    boolean that_present_esunny3ContractCode = true && that.isSetEsunny3ContractCode();
    if (this_present_esunny3ContractCode || that_present_esunny3ContractCode) {
      if (!(this_present_esunny3ContractCode && that_present_esunny3ContractCode))
        return false;
      if (!this.esunny3ContractCode.equals(that.esunny3ContractCode))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ESunny3ContractSummary other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetEsunny3ExchangeCode()).compareTo(other.isSetEsunny3ExchangeCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEsunny3ExchangeCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.esunny3ExchangeCode, other.esunny3ExchangeCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEsunny3CommodityType()).compareTo(other.isSetEsunny3CommodityType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEsunny3CommodityType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.esunny3CommodityType, other.esunny3CommodityType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEsunny3CommodityCode()).compareTo(other.isSetEsunny3CommodityCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEsunny3CommodityCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.esunny3CommodityCode, other.esunny3CommodityCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEsunny3ContractCode()).compareTo(other.isSetEsunny3ContractCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEsunny3ContractCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.esunny3ContractCode, other.esunny3ContractCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ESunny3ContractSummary(");
    boolean first = true;

    if (isSetEsunny3ExchangeCode()) {
      sb.append("esunny3ExchangeCode:");
      if (this.esunny3ExchangeCode == null) {
        sb.append("null");
      } else {
        sb.append(this.esunny3ExchangeCode);
      }
      first = false;
    }
    if (isSetEsunny3CommodityType()) {
      if (!first) sb.append(", ");
      sb.append("esunny3CommodityType:");
      sb.append(this.esunny3CommodityType);
      first = false;
    }
    if (isSetEsunny3CommodityCode()) {
      if (!first) sb.append(", ");
      sb.append("esunny3CommodityCode:");
      if (this.esunny3CommodityCode == null) {
        sb.append("null");
      } else {
        sb.append(this.esunny3CommodityCode);
      }
      first = false;
    }
    if (isSetEsunny3ContractCode()) {
      if (!first) sb.append(", ");
      sb.append("esunny3ContractCode:");
      if (this.esunny3ContractCode == null) {
        sb.append("null");
      } else {
        sb.append(this.esunny3ContractCode);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ESunny3ContractSummaryStandardSchemeFactory implements SchemeFactory {
    public ESunny3ContractSummaryStandardScheme getScheme() {
      return new ESunny3ContractSummaryStandardScheme();
    }
  }

  private static class ESunny3ContractSummaryStandardScheme extends StandardScheme<ESunny3ContractSummary> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ESunny3ContractSummary struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ESUNNY3_EXCHANGE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.esunny3ExchangeCode = iprot.readString();
              struct.setEsunny3ExchangeCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ESUNNY3_COMMODITY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.esunny3CommodityType = iprot.readI16();
              struct.setEsunny3CommodityTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ESUNNY3_COMMODITY_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.esunny3CommodityCode = iprot.readString();
              struct.setEsunny3CommodityCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ESUNNY3_CONTRACT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.esunny3ContractCode = iprot.readString();
              struct.setEsunny3ContractCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ESunny3ContractSummary struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.esunny3ExchangeCode != null) {
        if (struct.isSetEsunny3ExchangeCode()) {
          oprot.writeFieldBegin(ESUNNY3_EXCHANGE_CODE_FIELD_DESC);
          oprot.writeString(struct.esunny3ExchangeCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetEsunny3CommodityType()) {
        oprot.writeFieldBegin(ESUNNY3_COMMODITY_TYPE_FIELD_DESC);
        oprot.writeI16(struct.esunny3CommodityType);
        oprot.writeFieldEnd();
      }
      if (struct.esunny3CommodityCode != null) {
        if (struct.isSetEsunny3CommodityCode()) {
          oprot.writeFieldBegin(ESUNNY3_COMMODITY_CODE_FIELD_DESC);
          oprot.writeString(struct.esunny3CommodityCode);
          oprot.writeFieldEnd();
        }
      }
      if (struct.esunny3ContractCode != null) {
        if (struct.isSetEsunny3ContractCode()) {
          oprot.writeFieldBegin(ESUNNY3_CONTRACT_CODE_FIELD_DESC);
          oprot.writeString(struct.esunny3ContractCode);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ESunny3ContractSummaryTupleSchemeFactory implements SchemeFactory {
    public ESunny3ContractSummaryTupleScheme getScheme() {
      return new ESunny3ContractSummaryTupleScheme();
    }
  }

  private static class ESunny3ContractSummaryTupleScheme extends TupleScheme<ESunny3ContractSummary> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ESunny3ContractSummary struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetEsunny3ExchangeCode()) {
        optionals.set(0);
      }
      if (struct.isSetEsunny3CommodityType()) {
        optionals.set(1);
      }
      if (struct.isSetEsunny3CommodityCode()) {
        optionals.set(2);
      }
      if (struct.isSetEsunny3ContractCode()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetEsunny3ExchangeCode()) {
        oprot.writeString(struct.esunny3ExchangeCode);
      }
      if (struct.isSetEsunny3CommodityType()) {
        oprot.writeI16(struct.esunny3CommodityType);
      }
      if (struct.isSetEsunny3CommodityCode()) {
        oprot.writeString(struct.esunny3CommodityCode);
      }
      if (struct.isSetEsunny3ContractCode()) {
        oprot.writeString(struct.esunny3ContractCode);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ESunny3ContractSummary struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.esunny3ExchangeCode = iprot.readString();
        struct.setEsunny3ExchangeCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.esunny3CommodityType = iprot.readI16();
        struct.setEsunny3CommodityTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.esunny3CommodityCode = iprot.readString();
        struct.setEsunny3CommodityCodeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.esunny3ContractCode = iprot.readString();
        struct.setEsunny3ContractCodeIsSet(true);
      }
    }
  }

}


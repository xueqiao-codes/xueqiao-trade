/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.broker.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class BrokerAccessEntry implements org.apache.thrift.TBase<BrokerAccessEntry, BrokerAccessEntry._Fields>, java.io.Serializable, Cloneable, Comparable<BrokerAccessEntry> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BrokerAccessEntry");

  private static final org.apache.thrift.protocol.TField ENTRY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("entryId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField BROKER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PLATFORM_FIELD_DESC = new org.apache.thrift.protocol.TField("platform", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField TRADE_ADDRESSES_FIELD_DESC = new org.apache.thrift.protocol.TField("tradeAddresses", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField CUSTOM_INFO_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("customInfoMap", org.apache.thrift.protocol.TType.MAP, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField LAST_MODITY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModityTimestamp", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField WORKING_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("workingStatus", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField TECH_PLATFORM_ENV_FIELD_DESC = new org.apache.thrift.protocol.TField("techPlatformEnv", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField ACCESS_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("accessName", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField QUOTA_ADDRESSES_FIELD_DESC = new org.apache.thrift.protocol.TField("quotaAddresses", org.apache.thrift.protocol.TType.LIST, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BrokerAccessEntryStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BrokerAccessEntryTupleSchemeFactory());
  }

  public int entryId; // optional
  public int brokerId; // optional
  /**
   * 
   * @see BrokerPlatform
   */
  public BrokerPlatform platform; // optional
  public List<AccessAddress> tradeAddresses; // optional
  public Map<String,String> customInfoMap; // optional
  /**
   * 
   * @see BrokerAccessStatus
   */
  public BrokerAccessStatus status; // optional
  public long lastModityTimestamp; // optional
  public long createTimestamp; // optional
  /**
   * 
   * @see BrokerAccessWorkingStatus
   */
  public BrokerAccessWorkingStatus workingStatus; // optional
  /**
   * 
   * @see TechPlatformEnv
   */
  public TechPlatformEnv techPlatformEnv; // optional
  public String accessName; // optional
  public List<AccessAddress> quotaAddresses; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ENTRY_ID((short)1, "entryId"),
    BROKER_ID((short)2, "brokerId"),
    /**
     * 
     * @see BrokerPlatform
     */
    PLATFORM((short)3, "platform"),
    TRADE_ADDRESSES((short)4, "tradeAddresses"),
    CUSTOM_INFO_MAP((short)5, "customInfoMap"),
    /**
     * 
     * @see BrokerAccessStatus
     */
    STATUS((short)6, "status"),
    LAST_MODITY_TIMESTAMP((short)7, "lastModityTimestamp"),
    CREATE_TIMESTAMP((short)8, "createTimestamp"),
    /**
     * 
     * @see BrokerAccessWorkingStatus
     */
    WORKING_STATUS((short)9, "workingStatus"),
    /**
     * 
     * @see TechPlatformEnv
     */
    TECH_PLATFORM_ENV((short)10, "techPlatformEnv"),
    ACCESS_NAME((short)11, "accessName"),
    QUOTA_ADDRESSES((short)12, "quotaAddresses");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ENTRY_ID
          return ENTRY_ID;
        case 2: // BROKER_ID
          return BROKER_ID;
        case 3: // PLATFORM
          return PLATFORM;
        case 4: // TRADE_ADDRESSES
          return TRADE_ADDRESSES;
        case 5: // CUSTOM_INFO_MAP
          return CUSTOM_INFO_MAP;
        case 6: // STATUS
          return STATUS;
        case 7: // LAST_MODITY_TIMESTAMP
          return LAST_MODITY_TIMESTAMP;
        case 8: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 9: // WORKING_STATUS
          return WORKING_STATUS;
        case 10: // TECH_PLATFORM_ENV
          return TECH_PLATFORM_ENV;
        case 11: // ACCESS_NAME
          return ACCESS_NAME;
        case 12: // QUOTA_ADDRESSES
          return QUOTA_ADDRESSES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ENTRYID_ISSET_ID = 0;
  private static final int __BROKERID_ISSET_ID = 1;
  private static final int __LASTMODITYTIMESTAMP_ISSET_ID = 2;
  private static final int __CREATETIMESTAMP_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ENTRY_ID,_Fields.BROKER_ID,_Fields.PLATFORM,_Fields.TRADE_ADDRESSES,_Fields.CUSTOM_INFO_MAP,_Fields.STATUS,_Fields.LAST_MODITY_TIMESTAMP,_Fields.CREATE_TIMESTAMP,_Fields.WORKING_STATUS,_Fields.TECH_PLATFORM_ENV,_Fields.ACCESS_NAME,_Fields.QUOTA_ADDRESSES};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ENTRY_ID, new org.apache.thrift.meta_data.FieldMetaData("entryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BROKER_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLATFORM, new org.apache.thrift.meta_data.FieldMetaData("platform", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BrokerPlatform.class)));
    tmpMap.put(_Fields.TRADE_ADDRESSES, new org.apache.thrift.meta_data.FieldMetaData("tradeAddresses", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccessAddress.class))));
    tmpMap.put(_Fields.CUSTOM_INFO_MAP, new org.apache.thrift.meta_data.FieldMetaData("customInfoMap", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BrokerAccessStatus.class)));
    tmpMap.put(_Fields.LAST_MODITY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastModityTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.WORKING_STATUS, new org.apache.thrift.meta_data.FieldMetaData("workingStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, BrokerAccessWorkingStatus.class)));
    tmpMap.put(_Fields.TECH_PLATFORM_ENV, new org.apache.thrift.meta_data.FieldMetaData("techPlatformEnv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TechPlatformEnv.class)));
    tmpMap.put(_Fields.ACCESS_NAME, new org.apache.thrift.meta_data.FieldMetaData("accessName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUOTA_ADDRESSES, new org.apache.thrift.meta_data.FieldMetaData("quotaAddresses", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AccessAddress.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BrokerAccessEntry.class, metaDataMap);
  }

  public BrokerAccessEntry() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BrokerAccessEntry(BrokerAccessEntry other) {
    __isset_bitfield = other.__isset_bitfield;
    this.entryId = other.entryId;
    this.brokerId = other.brokerId;
    if (other.isSetPlatform()) {
      this.platform = other.platform;
    }
    if (other.isSetTradeAddresses()) {
      List<AccessAddress> __this__tradeAddresses = new ArrayList<AccessAddress>(other.tradeAddresses.size());
      for (AccessAddress other_element : other.tradeAddresses) {
        __this__tradeAddresses.add(new AccessAddress(other_element));
      }
      this.tradeAddresses = __this__tradeAddresses;
    }
    if (other.isSetCustomInfoMap()) {
      Map<String,String> __this__customInfoMap = new HashMap<String,String>(other.customInfoMap);
      this.customInfoMap = __this__customInfoMap;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    this.lastModityTimestamp = other.lastModityTimestamp;
    this.createTimestamp = other.createTimestamp;
    if (other.isSetWorkingStatus()) {
      this.workingStatus = other.workingStatus;
    }
    if (other.isSetTechPlatformEnv()) {
      this.techPlatformEnv = other.techPlatformEnv;
    }
    if (other.isSetAccessName()) {
      this.accessName = other.accessName;
    }
    if (other.isSetQuotaAddresses()) {
      List<AccessAddress> __this__quotaAddresses = new ArrayList<AccessAddress>(other.quotaAddresses.size());
      for (AccessAddress other_element : other.quotaAddresses) {
        __this__quotaAddresses.add(new AccessAddress(other_element));
      }
      this.quotaAddresses = __this__quotaAddresses;
    }
  }

  public BrokerAccessEntry deepCopy() {
    return new BrokerAccessEntry(this);
  }

  @Override
  public void clear() {
    setEntryIdIsSet(false);
    this.entryId = 0;
    setBrokerIdIsSet(false);
    this.brokerId = 0;
    this.platform = null;
    this.tradeAddresses = null;
    this.customInfoMap = null;
    this.status = null;
    setLastModityTimestampIsSet(false);
    this.lastModityTimestamp = 0;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    this.workingStatus = null;
    this.techPlatformEnv = null;
    this.accessName = null;
    this.quotaAddresses = null;
  }

  public int getEntryId() {
    return this.entryId;
  }

  public BrokerAccessEntry setEntryId(int entryId) {
    this.entryId = entryId;
    setEntryIdIsSet(true);
    return this;
  }

  public void unsetEntryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ENTRYID_ISSET_ID);
  }

  /** Returns true if field entryId is set (has been assigned a value) and false otherwise */
  public boolean isSetEntryId() {
    return EncodingUtils.testBit(__isset_bitfield, __ENTRYID_ISSET_ID);
  }

  public void setEntryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ENTRYID_ISSET_ID, value);
  }

  public int getBrokerId() {
    return this.brokerId;
  }

  public BrokerAccessEntry setBrokerId(int brokerId) {
    this.brokerId = brokerId;
    setBrokerIdIsSet(true);
    return this;
  }

  public void unsetBrokerId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERID_ISSET_ID);
  }

  /** Returns true if field brokerId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERID_ISSET_ID);
  }

  public void setBrokerIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERID_ISSET_ID, value);
  }

  /**
   * 
   * @see BrokerPlatform
   */
  public BrokerPlatform getPlatform() {
    return this.platform;
  }

  /**
   * 
   * @see BrokerPlatform
   */
  public BrokerAccessEntry setPlatform(BrokerPlatform platform) {
    this.platform = platform;
    return this;
  }

  public void unsetPlatform() {
    this.platform = null;
  }

  /** Returns true if field platform is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatform() {
    return this.platform != null;
  }

  public void setPlatformIsSet(boolean value) {
    if (!value) {
      this.platform = null;
    }
  }

  public int getTradeAddressesSize() {
    return (this.tradeAddresses == null) ? 0 : this.tradeAddresses.size();
  }

  public java.util.Iterator<AccessAddress> getTradeAddressesIterator() {
    return (this.tradeAddresses == null) ? null : this.tradeAddresses.iterator();
  }

  public void addToTradeAddresses(AccessAddress elem) {
    if (this.tradeAddresses == null) {
      this.tradeAddresses = new ArrayList<AccessAddress>();
    }
    this.tradeAddresses.add(elem);
  }

  public List<AccessAddress> getTradeAddresses() {
    return this.tradeAddresses;
  }

  public BrokerAccessEntry setTradeAddresses(List<AccessAddress> tradeAddresses) {
    this.tradeAddresses = tradeAddresses;
    return this;
  }

  public void unsetTradeAddresses() {
    this.tradeAddresses = null;
  }

  /** Returns true if field tradeAddresses is set (has been assigned a value) and false otherwise */
  public boolean isSetTradeAddresses() {
    return this.tradeAddresses != null;
  }

  public void setTradeAddressesIsSet(boolean value) {
    if (!value) {
      this.tradeAddresses = null;
    }
  }

  public int getCustomInfoMapSize() {
    return (this.customInfoMap == null) ? 0 : this.customInfoMap.size();
  }

  public void putToCustomInfoMap(String key, String val) {
    if (this.customInfoMap == null) {
      this.customInfoMap = new HashMap<String,String>();
    }
    this.customInfoMap.put(key, val);
  }

  public Map<String,String> getCustomInfoMap() {
    return this.customInfoMap;
  }

  public BrokerAccessEntry setCustomInfoMap(Map<String,String> customInfoMap) {
    this.customInfoMap = customInfoMap;
    return this;
  }

  public void unsetCustomInfoMap() {
    this.customInfoMap = null;
  }

  /** Returns true if field customInfoMap is set (has been assigned a value) and false otherwise */
  public boolean isSetCustomInfoMap() {
    return this.customInfoMap != null;
  }

  public void setCustomInfoMapIsSet(boolean value) {
    if (!value) {
      this.customInfoMap = null;
    }
  }

  /**
   * 
   * @see BrokerAccessStatus
   */
  public BrokerAccessStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see BrokerAccessStatus
   */
  public BrokerAccessEntry setStatus(BrokerAccessStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public long getLastModityTimestamp() {
    return this.lastModityTimestamp;
  }

  public BrokerAccessEntry setLastModityTimestamp(long lastModityTimestamp) {
    this.lastModityTimestamp = lastModityTimestamp;
    setLastModityTimestampIsSet(true);
    return this;
  }

  public void unsetLastModityTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODITYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastModityTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModityTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODITYTIMESTAMP_ISSET_ID);
  }

  public void setLastModityTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODITYTIMESTAMP_ISSET_ID, value);
  }

  public long getCreateTimestamp() {
    return this.createTimestamp;
  }

  public BrokerAccessEntry setCreateTimestamp(long createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  /**
   * 
   * @see BrokerAccessWorkingStatus
   */
  public BrokerAccessWorkingStatus getWorkingStatus() {
    return this.workingStatus;
  }

  /**
   * 
   * @see BrokerAccessWorkingStatus
   */
  public BrokerAccessEntry setWorkingStatus(BrokerAccessWorkingStatus workingStatus) {
    this.workingStatus = workingStatus;
    return this;
  }

  public void unsetWorkingStatus() {
    this.workingStatus = null;
  }

  /** Returns true if field workingStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetWorkingStatus() {
    return this.workingStatus != null;
  }

  public void setWorkingStatusIsSet(boolean value) {
    if (!value) {
      this.workingStatus = null;
    }
  }

  /**
   * 
   * @see TechPlatformEnv
   */
  public TechPlatformEnv getTechPlatformEnv() {
    return this.techPlatformEnv;
  }

  /**
   * 
   * @see TechPlatformEnv
   */
  public BrokerAccessEntry setTechPlatformEnv(TechPlatformEnv techPlatformEnv) {
    this.techPlatformEnv = techPlatformEnv;
    return this;
  }

  public void unsetTechPlatformEnv() {
    this.techPlatformEnv = null;
  }

  /** Returns true if field techPlatformEnv is set (has been assigned a value) and false otherwise */
  public boolean isSetTechPlatformEnv() {
    return this.techPlatformEnv != null;
  }

  public void setTechPlatformEnvIsSet(boolean value) {
    if (!value) {
      this.techPlatformEnv = null;
    }
  }

  public String getAccessName() {
    return this.accessName;
  }

  public BrokerAccessEntry setAccessName(String accessName) {
    this.accessName = accessName;
    return this;
  }

  public void unsetAccessName() {
    this.accessName = null;
  }

  /** Returns true if field accessName is set (has been assigned a value) and false otherwise */
  public boolean isSetAccessName() {
    return this.accessName != null;
  }

  public void setAccessNameIsSet(boolean value) {
    if (!value) {
      this.accessName = null;
    }
  }

  public int getQuotaAddressesSize() {
    return (this.quotaAddresses == null) ? 0 : this.quotaAddresses.size();
  }

  public java.util.Iterator<AccessAddress> getQuotaAddressesIterator() {
    return (this.quotaAddresses == null) ? null : this.quotaAddresses.iterator();
  }

  public void addToQuotaAddresses(AccessAddress elem) {
    if (this.quotaAddresses == null) {
      this.quotaAddresses = new ArrayList<AccessAddress>();
    }
    this.quotaAddresses.add(elem);
  }

  public List<AccessAddress> getQuotaAddresses() {
    return this.quotaAddresses;
  }

  public BrokerAccessEntry setQuotaAddresses(List<AccessAddress> quotaAddresses) {
    this.quotaAddresses = quotaAddresses;
    return this;
  }

  public void unsetQuotaAddresses() {
    this.quotaAddresses = null;
  }

  /** Returns true if field quotaAddresses is set (has been assigned a value) and false otherwise */
  public boolean isSetQuotaAddresses() {
    return this.quotaAddresses != null;
  }

  public void setQuotaAddressesIsSet(boolean value) {
    if (!value) {
      this.quotaAddresses = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ENTRY_ID:
      if (value == null) {
        unsetEntryId();
      } else {
        setEntryId((Integer)value);
      }
      break;

    case BROKER_ID:
      if (value == null) {
        unsetBrokerId();
      } else {
        setBrokerId((Integer)value);
      }
      break;

    case PLATFORM:
      if (value == null) {
        unsetPlatform();
      } else {
        setPlatform((BrokerPlatform)value);
      }
      break;

    case TRADE_ADDRESSES:
      if (value == null) {
        unsetTradeAddresses();
      } else {
        setTradeAddresses((List<AccessAddress>)value);
      }
      break;

    case CUSTOM_INFO_MAP:
      if (value == null) {
        unsetCustomInfoMap();
      } else {
        setCustomInfoMap((Map<String,String>)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((BrokerAccessStatus)value);
      }
      break;

    case LAST_MODITY_TIMESTAMP:
      if (value == null) {
        unsetLastModityTimestamp();
      } else {
        setLastModityTimestamp((Long)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Long)value);
      }
      break;

    case WORKING_STATUS:
      if (value == null) {
        unsetWorkingStatus();
      } else {
        setWorkingStatus((BrokerAccessWorkingStatus)value);
      }
      break;

    case TECH_PLATFORM_ENV:
      if (value == null) {
        unsetTechPlatformEnv();
      } else {
        setTechPlatformEnv((TechPlatformEnv)value);
      }
      break;

    case ACCESS_NAME:
      if (value == null) {
        unsetAccessName();
      } else {
        setAccessName((String)value);
      }
      break;

    case QUOTA_ADDRESSES:
      if (value == null) {
        unsetQuotaAddresses();
      } else {
        setQuotaAddresses((List<AccessAddress>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ENTRY_ID:
      return Integer.valueOf(getEntryId());

    case BROKER_ID:
      return Integer.valueOf(getBrokerId());

    case PLATFORM:
      return getPlatform();

    case TRADE_ADDRESSES:
      return getTradeAddresses();

    case CUSTOM_INFO_MAP:
      return getCustomInfoMap();

    case STATUS:
      return getStatus();

    case LAST_MODITY_TIMESTAMP:
      return Long.valueOf(getLastModityTimestamp());

    case CREATE_TIMESTAMP:
      return Long.valueOf(getCreateTimestamp());

    case WORKING_STATUS:
      return getWorkingStatus();

    case TECH_PLATFORM_ENV:
      return getTechPlatformEnv();

    case ACCESS_NAME:
      return getAccessName();

    case QUOTA_ADDRESSES:
      return getQuotaAddresses();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ENTRY_ID:
      return isSetEntryId();
    case BROKER_ID:
      return isSetBrokerId();
    case PLATFORM:
      return isSetPlatform();
    case TRADE_ADDRESSES:
      return isSetTradeAddresses();
    case CUSTOM_INFO_MAP:
      return isSetCustomInfoMap();
    case STATUS:
      return isSetStatus();
    case LAST_MODITY_TIMESTAMP:
      return isSetLastModityTimestamp();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case WORKING_STATUS:
      return isSetWorkingStatus();
    case TECH_PLATFORM_ENV:
      return isSetTechPlatformEnv();
    case ACCESS_NAME:
      return isSetAccessName();
    case QUOTA_ADDRESSES:
      return isSetQuotaAddresses();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BrokerAccessEntry)
      return this.equals((BrokerAccessEntry)that);
    return false;
  }

  public boolean equals(BrokerAccessEntry that) {
    if (that == null)
      return false;

    boolean this_present_entryId = true && this.isSetEntryId();
    boolean that_present_entryId = true && that.isSetEntryId();
    if (this_present_entryId || that_present_entryId) {
      if (!(this_present_entryId && that_present_entryId))
        return false;
      if (this.entryId != that.entryId)
        return false;
    }

    boolean this_present_brokerId = true && this.isSetBrokerId();
    boolean that_present_brokerId = true && that.isSetBrokerId();
    if (this_present_brokerId || that_present_brokerId) {
      if (!(this_present_brokerId && that_present_brokerId))
        return false;
      if (this.brokerId != that.brokerId)
        return false;
    }

    boolean this_present_platform = true && this.isSetPlatform();
    boolean that_present_platform = true && that.isSetPlatform();
    if (this_present_platform || that_present_platform) {
      if (!(this_present_platform && that_present_platform))
        return false;
      if (!this.platform.equals(that.platform))
        return false;
    }

    boolean this_present_tradeAddresses = true && this.isSetTradeAddresses();
    boolean that_present_tradeAddresses = true && that.isSetTradeAddresses();
    if (this_present_tradeAddresses || that_present_tradeAddresses) {
      if (!(this_present_tradeAddresses && that_present_tradeAddresses))
        return false;
      if (!this.tradeAddresses.equals(that.tradeAddresses))
        return false;
    }

    boolean this_present_customInfoMap = true && this.isSetCustomInfoMap();
    boolean that_present_customInfoMap = true && that.isSetCustomInfoMap();
    if (this_present_customInfoMap || that_present_customInfoMap) {
      if (!(this_present_customInfoMap && that_present_customInfoMap))
        return false;
      if (!this.customInfoMap.equals(that.customInfoMap))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_lastModityTimestamp = true && this.isSetLastModityTimestamp();
    boolean that_present_lastModityTimestamp = true && that.isSetLastModityTimestamp();
    if (this_present_lastModityTimestamp || that_present_lastModityTimestamp) {
      if (!(this_present_lastModityTimestamp && that_present_lastModityTimestamp))
        return false;
      if (this.lastModityTimestamp != that.lastModityTimestamp)
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_workingStatus = true && this.isSetWorkingStatus();
    boolean that_present_workingStatus = true && that.isSetWorkingStatus();
    if (this_present_workingStatus || that_present_workingStatus) {
      if (!(this_present_workingStatus && that_present_workingStatus))
        return false;
      if (!this.workingStatus.equals(that.workingStatus))
        return false;
    }

    boolean this_present_techPlatformEnv = true && this.isSetTechPlatformEnv();
    boolean that_present_techPlatformEnv = true && that.isSetTechPlatformEnv();
    if (this_present_techPlatformEnv || that_present_techPlatformEnv) {
      if (!(this_present_techPlatformEnv && that_present_techPlatformEnv))
        return false;
      if (!this.techPlatformEnv.equals(that.techPlatformEnv))
        return false;
    }

    boolean this_present_accessName = true && this.isSetAccessName();
    boolean that_present_accessName = true && that.isSetAccessName();
    if (this_present_accessName || that_present_accessName) {
      if (!(this_present_accessName && that_present_accessName))
        return false;
      if (!this.accessName.equals(that.accessName))
        return false;
    }

    boolean this_present_quotaAddresses = true && this.isSetQuotaAddresses();
    boolean that_present_quotaAddresses = true && that.isSetQuotaAddresses();
    if (this_present_quotaAddresses || that_present_quotaAddresses) {
      if (!(this_present_quotaAddresses && that_present_quotaAddresses))
        return false;
      if (!this.quotaAddresses.equals(that.quotaAddresses))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(BrokerAccessEntry other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetEntryId()).compareTo(other.isSetEntryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entryId, other.entryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerId()).compareTo(other.isSetBrokerId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerId, other.brokerId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatform()).compareTo(other.isSetPlatform());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatform()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platform, other.platform);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTradeAddresses()).compareTo(other.isSetTradeAddresses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTradeAddresses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tradeAddresses, other.tradeAddresses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustomInfoMap()).compareTo(other.isSetCustomInfoMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustomInfoMap()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.customInfoMap, other.customInfoMap);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModityTimestamp()).compareTo(other.isSetLastModityTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModityTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModityTimestamp, other.lastModityTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWorkingStatus()).compareTo(other.isSetWorkingStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWorkingStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.workingStatus, other.workingStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTechPlatformEnv()).compareTo(other.isSetTechPlatformEnv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTechPlatformEnv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.techPlatformEnv, other.techPlatformEnv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccessName()).compareTo(other.isSetAccessName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccessName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accessName, other.accessName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuotaAddresses()).compareTo(other.isSetQuotaAddresses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuotaAddresses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quotaAddresses, other.quotaAddresses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BrokerAccessEntry(");
    boolean first = true;

    if (isSetEntryId()) {
      sb.append("entryId:");
      sb.append(this.entryId);
      first = false;
    }
    if (isSetBrokerId()) {
      if (!first) sb.append(", ");
      sb.append("brokerId:");
      sb.append(this.brokerId);
      first = false;
    }
    if (isSetPlatform()) {
      if (!first) sb.append(", ");
      sb.append("platform:");
      if (this.platform == null) {
        sb.append("null");
      } else {
        sb.append(this.platform);
      }
      first = false;
    }
    if (isSetTradeAddresses()) {
      if (!first) sb.append(", ");
      sb.append("tradeAddresses:");
      if (this.tradeAddresses == null) {
        sb.append("null");
      } else {
        sb.append(this.tradeAddresses);
      }
      first = false;
    }
    if (isSetCustomInfoMap()) {
      if (!first) sb.append(", ");
      sb.append("customInfoMap:");
      if (this.customInfoMap == null) {
        sb.append("null");
      } else {
        sb.append(this.customInfoMap);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      if (this.status == null) {
        sb.append("null");
      } else {
        sb.append(this.status);
      }
      first = false;
    }
    if (isSetLastModityTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastModityTimestamp:");
      sb.append(this.lastModityTimestamp);
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetWorkingStatus()) {
      if (!first) sb.append(", ");
      sb.append("workingStatus:");
      if (this.workingStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.workingStatus);
      }
      first = false;
    }
    if (isSetTechPlatformEnv()) {
      if (!first) sb.append(", ");
      sb.append("techPlatformEnv:");
      if (this.techPlatformEnv == null) {
        sb.append("null");
      } else {
        sb.append(this.techPlatformEnv);
      }
      first = false;
    }
    if (isSetAccessName()) {
      if (!first) sb.append(", ");
      sb.append("accessName:");
      if (this.accessName == null) {
        sb.append("null");
      } else {
        sb.append(this.accessName);
      }
      first = false;
    }
    if (isSetQuotaAddresses()) {
      if (!first) sb.append(", ");
      sb.append("quotaAddresses:");
      if (this.quotaAddresses == null) {
        sb.append("null");
      } else {
        sb.append(this.quotaAddresses);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BrokerAccessEntryStandardSchemeFactory implements SchemeFactory {
    public BrokerAccessEntryStandardScheme getScheme() {
      return new BrokerAccessEntryStandardScheme();
    }
  }

  private static class BrokerAccessEntryStandardScheme extends StandardScheme<BrokerAccessEntry> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BrokerAccessEntry struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ENTRY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.entryId = iprot.readI32();
              struct.setEntryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BROKER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerId = iprot.readI32();
              struct.setBrokerIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PLATFORM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.platform = BrokerPlatform.findByValue(iprot.readI32());
              struct.setPlatformIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // TRADE_ADDRESSES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list26 = iprot.readListBegin();
                struct.tradeAddresses = new ArrayList<AccessAddress>(_list26.size);
                for (int _i27 = 0; _i27 < _list26.size; ++_i27)
                {
                  AccessAddress _elem28;
                  _elem28 = new AccessAddress();
                  _elem28.read(iprot);
                  struct.tradeAddresses.add(_elem28);
                }
                iprot.readListEnd();
              }
              struct.setTradeAddressesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CUSTOM_INFO_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map29 = iprot.readMapBegin();
                struct.customInfoMap = new HashMap<String,String>(2*_map29.size);
                for (int _i30 = 0; _i30 < _map29.size; ++_i30)
                {
                  String _key31;
                  String _val32;
                  _key31 = iprot.readString();
                  _val32 = iprot.readString();
                  struct.customInfoMap.put(_key31, _val32);
                }
                iprot.readMapEnd();
              }
              struct.setCustomInfoMapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = BrokerAccessStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LAST_MODITY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModityTimestamp = iprot.readI64();
              struct.setLastModityTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimestamp = iprot.readI64();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // WORKING_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.workingStatus = BrokerAccessWorkingStatus.findByValue(iprot.readI32());
              struct.setWorkingStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TECH_PLATFORM_ENV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.techPlatformEnv = TechPlatformEnv.findByValue(iprot.readI32());
              struct.setTechPlatformEnvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ACCESS_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accessName = iprot.readString();
              struct.setAccessNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // QUOTA_ADDRESSES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list33 = iprot.readListBegin();
                struct.quotaAddresses = new ArrayList<AccessAddress>(_list33.size);
                for (int _i34 = 0; _i34 < _list33.size; ++_i34)
                {
                  AccessAddress _elem35;
                  _elem35 = new AccessAddress();
                  _elem35.read(iprot);
                  struct.quotaAddresses.add(_elem35);
                }
                iprot.readListEnd();
              }
              struct.setQuotaAddressesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BrokerAccessEntry struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetEntryId()) {
        oprot.writeFieldBegin(ENTRY_ID_FIELD_DESC);
        oprot.writeI32(struct.entryId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBrokerId()) {
        oprot.writeFieldBegin(BROKER_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerId);
        oprot.writeFieldEnd();
      }
      if (struct.platform != null) {
        if (struct.isSetPlatform()) {
          oprot.writeFieldBegin(PLATFORM_FIELD_DESC);
          oprot.writeI32(struct.platform.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.tradeAddresses != null) {
        if (struct.isSetTradeAddresses()) {
          oprot.writeFieldBegin(TRADE_ADDRESSES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.tradeAddresses.size()));
            for (AccessAddress _iter36 : struct.tradeAddresses)
            {
              _iter36.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.customInfoMap != null) {
        if (struct.isSetCustomInfoMap()) {
          oprot.writeFieldBegin(CUSTOM_INFO_MAP_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.customInfoMap.size()));
            for (Map.Entry<String, String> _iter37 : struct.customInfoMap.entrySet())
            {
              oprot.writeString(_iter37.getKey());
              oprot.writeString(_iter37.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.status != null) {
        if (struct.isSetStatus()) {
          oprot.writeFieldBegin(STATUS_FIELD_DESC);
          oprot.writeI32(struct.status.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetLastModityTimestamp()) {
        oprot.writeFieldBegin(LAST_MODITY_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.lastModityTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.workingStatus != null) {
        if (struct.isSetWorkingStatus()) {
          oprot.writeFieldBegin(WORKING_STATUS_FIELD_DESC);
          oprot.writeI32(struct.workingStatus.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.techPlatformEnv != null) {
        if (struct.isSetTechPlatformEnv()) {
          oprot.writeFieldBegin(TECH_PLATFORM_ENV_FIELD_DESC);
          oprot.writeI32(struct.techPlatformEnv.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.accessName != null) {
        if (struct.isSetAccessName()) {
          oprot.writeFieldBegin(ACCESS_NAME_FIELD_DESC);
          oprot.writeString(struct.accessName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.quotaAddresses != null) {
        if (struct.isSetQuotaAddresses()) {
          oprot.writeFieldBegin(QUOTA_ADDRESSES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.quotaAddresses.size()));
            for (AccessAddress _iter38 : struct.quotaAddresses)
            {
              _iter38.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BrokerAccessEntryTupleSchemeFactory implements SchemeFactory {
    public BrokerAccessEntryTupleScheme getScheme() {
      return new BrokerAccessEntryTupleScheme();
    }
  }

  private static class BrokerAccessEntryTupleScheme extends TupleScheme<BrokerAccessEntry> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BrokerAccessEntry struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetEntryId()) {
        optionals.set(0);
      }
      if (struct.isSetBrokerId()) {
        optionals.set(1);
      }
      if (struct.isSetPlatform()) {
        optionals.set(2);
      }
      if (struct.isSetTradeAddresses()) {
        optionals.set(3);
      }
      if (struct.isSetCustomInfoMap()) {
        optionals.set(4);
      }
      if (struct.isSetStatus()) {
        optionals.set(5);
      }
      if (struct.isSetLastModityTimestamp()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(7);
      }
      if (struct.isSetWorkingStatus()) {
        optionals.set(8);
      }
      if (struct.isSetTechPlatformEnv()) {
        optionals.set(9);
      }
      if (struct.isSetAccessName()) {
        optionals.set(10);
      }
      if (struct.isSetQuotaAddresses()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetEntryId()) {
        oprot.writeI32(struct.entryId);
      }
      if (struct.isSetBrokerId()) {
        oprot.writeI32(struct.brokerId);
      }
      if (struct.isSetPlatform()) {
        oprot.writeI32(struct.platform.getValue());
      }
      if (struct.isSetTradeAddresses()) {
        {
          oprot.writeI32(struct.tradeAddresses.size());
          for (AccessAddress _iter39 : struct.tradeAddresses)
          {
            _iter39.write(oprot);
          }
        }
      }
      if (struct.isSetCustomInfoMap()) {
        {
          oprot.writeI32(struct.customInfoMap.size());
          for (Map.Entry<String, String> _iter40 : struct.customInfoMap.entrySet())
          {
            oprot.writeString(_iter40.getKey());
            oprot.writeString(_iter40.getValue());
          }
        }
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status.getValue());
      }
      if (struct.isSetLastModityTimestamp()) {
        oprot.writeI64(struct.lastModityTimestamp);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI64(struct.createTimestamp);
      }
      if (struct.isSetWorkingStatus()) {
        oprot.writeI32(struct.workingStatus.getValue());
      }
      if (struct.isSetTechPlatformEnv()) {
        oprot.writeI32(struct.techPlatformEnv.getValue());
      }
      if (struct.isSetAccessName()) {
        oprot.writeString(struct.accessName);
      }
      if (struct.isSetQuotaAddresses()) {
        {
          oprot.writeI32(struct.quotaAddresses.size());
          for (AccessAddress _iter41 : struct.quotaAddresses)
          {
            _iter41.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BrokerAccessEntry struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.entryId = iprot.readI32();
        struct.setEntryIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.brokerId = iprot.readI32();
        struct.setBrokerIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.platform = BrokerPlatform.findByValue(iprot.readI32());
        struct.setPlatformIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list42 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.tradeAddresses = new ArrayList<AccessAddress>(_list42.size);
          for (int _i43 = 0; _i43 < _list42.size; ++_i43)
          {
            AccessAddress _elem44;
            _elem44 = new AccessAddress();
            _elem44.read(iprot);
            struct.tradeAddresses.add(_elem44);
          }
        }
        struct.setTradeAddressesIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TMap _map45 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.customInfoMap = new HashMap<String,String>(2*_map45.size);
          for (int _i46 = 0; _i46 < _map45.size; ++_i46)
          {
            String _key47;
            String _val48;
            _key47 = iprot.readString();
            _val48 = iprot.readString();
            struct.customInfoMap.put(_key47, _val48);
          }
        }
        struct.setCustomInfoMapIsSet(true);
      }
      if (incoming.get(5)) {
        struct.status = BrokerAccessStatus.findByValue(iprot.readI32());
        struct.setStatusIsSet(true);
      }
      if (incoming.get(6)) {
        struct.lastModityTimestamp = iprot.readI64();
        struct.setLastModityTimestampIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTimestamp = iprot.readI64();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(8)) {
        struct.workingStatus = BrokerAccessWorkingStatus.findByValue(iprot.readI32());
        struct.setWorkingStatusIsSet(true);
      }
      if (incoming.get(9)) {
        struct.techPlatformEnv = TechPlatformEnv.findByValue(iprot.readI32());
        struct.setTechPlatformEnvIsSet(true);
      }
      if (incoming.get(10)) {
        struct.accessName = iprot.readString();
        struct.setAccessNameIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TList _list49 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.quotaAddresses = new ArrayList<AccessAddress>(_list49.size);
          for (int _i50 = 0; _i50 < _list49.size; ++_i50)
          {
            AccessAddress _elem51;
            _elem51 = new AccessAddress();
            _elem51.read(iprot);
            struct.quotaAddresses.add(_elem51);
          }
        }
        struct.setQuotaAddressesIsSet(true);
      }
    }
  }

}


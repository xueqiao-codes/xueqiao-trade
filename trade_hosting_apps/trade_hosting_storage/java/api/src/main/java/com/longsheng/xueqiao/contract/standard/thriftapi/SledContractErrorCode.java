/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.contract.standard.thriftapi;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * 雪橇统一合约的业务错误码
 * 
 */
public enum SledContractErrorCode implements org.apache.thrift.TEnum {
  SLED_COMMODITY_NOT_FOUND(1000),
  COMMODITY_MAP_NOT_FOUND(1001),
  SLED_EXCHANGE_NOT_FOUND(1002),
  COMMODITY_MAP_UPDATE_FORBID(1003),
  SLED_COMMODITY_EXISTS(1004),
  SLED_EXCHANGE_EXISTS(1005),
  CONTRACT_VERSION_NOT_FOUND(1006),
  COMMODITY_MAP_EXISTS(1007),
  SLED_CONTRACT_NOT_FOUND(1008);

  private final int value;

  private SledContractErrorCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static SledContractErrorCode findByValue(int value) { 
    switch (value) {
      case 1000:
        return SLED_COMMODITY_NOT_FOUND;
      case 1001:
        return COMMODITY_MAP_NOT_FOUND;
      case 1002:
        return SLED_EXCHANGE_NOT_FOUND;
      case 1003:
        return COMMODITY_MAP_UPDATE_FORBID;
      case 1004:
        return SLED_COMMODITY_EXISTS;
      case 1005:
        return SLED_EXCHANGE_EXISTS;
      case 1006:
        return CONTRACT_VERSION_NOT_FOUND;
      case 1007:
        return COMMODITY_MAP_EXISTS;
      case 1008:
        return SLED_CONTRACT_NOT_FOUND;
      default:
        return null;
    }
  }
}

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.broker.thriftapi;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum BrokerErrorCode implements org.apache.thrift.TEnum {
  BROKER_NOT_FOUND(1000),
  BROKER_ENG_NAME_EXIST(1001),
  BROKER_CN_NAME_EXIST(1002),
  BROKER_ACCESS_NOT_VERIFIED(1003),
  BROKER_EXIST(1004),
  BROKER_ACCESS_EXIST(1005),
  BROKER_ACCESS_NOT_FOUND(1006),
  BROKER_ACCESS_BROKERID_NO_CHANGE(1007),
  BROKER_ACCESS_PLATFORM_NO_CHANGE(1008),
  BROKER_ACCESS_NOT_WORKING(1009),
  BROKER_ACCESS_WORKING(1010),
  BROKER_ACCESS_ADDRESS_ERROR(1011),
  BROKER_ACCESS_ADDRESS_PORT_ERROR(1012);

  private final int value;

  private BrokerErrorCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static BrokerErrorCode findByValue(int value) { 
    switch (value) {
      case 1000:
        return BROKER_NOT_FOUND;
      case 1001:
        return BROKER_ENG_NAME_EXIST;
      case 1002:
        return BROKER_CN_NAME_EXIST;
      case 1003:
        return BROKER_ACCESS_NOT_VERIFIED;
      case 1004:
        return BROKER_EXIST;
      case 1005:
        return BROKER_ACCESS_EXIST;
      case 1006:
        return BROKER_ACCESS_NOT_FOUND;
      case 1007:
        return BROKER_ACCESS_BROKERID_NO_CHANGE;
      case 1008:
        return BROKER_ACCESS_PLATFORM_NO_CHANGE;
      case 1009:
        return BROKER_ACCESS_NOT_WORKING;
      case 1010:
        return BROKER_ACCESS_WORKING;
      case 1011:
        return BROKER_ACCESS_ADDRESS_ERROR;
      case 1012:
        return BROKER_ACCESS_ADDRESS_PORT_ERROR;
      default:
        return null;
    }
  }
}

/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.trade.hosting.history.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class QueryXQOrderHisIndexItemOption implements org.apache.thrift.TBase<QueryXQOrderHisIndexItemOption, QueryXQOrderHisIndexItemOption._Fields>, java.io.Serializable, Cloneable, Comparable<QueryXQOrderHisIndexItemOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QueryXQOrderHisIndexItemOption");

  private static final org.apache.thrift.protocol.TField ORDER_CREATE_TIME_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("orderCreateTimePeriod", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField ORDER_END_TIME_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("orderEndTimePeriod", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField SUB_ACCOUNT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("subAccountIds", org.apache.thrift.protocol.TType.SET, (short)3);
  private static final org.apache.thrift.protocol.TField ORDER_TARGETS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderTargets", org.apache.thrift.protocol.TType.SET, (short)4);
  private static final org.apache.thrift.protocol.TField ITEM_ORDER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("itemOrderType", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QueryXQOrderHisIndexItemOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QueryXQOrderHisIndexItemOptionTupleSchemeFactory());
  }

  public QueryTimePeriod orderCreateTimePeriod; // optional
  public QueryTimePeriod orderEndTimePeriod; // optional
  public Set<Long> subAccountIds; // optional
  public Set<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget> orderTargets; // optional
  /**
   * 
   * @see QueryXQOrderHisIndexItemOrderType
   */
  public QueryXQOrderHisIndexItemOrderType itemOrderType; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORDER_CREATE_TIME_PERIOD((short)1, "orderCreateTimePeriod"),
    ORDER_END_TIME_PERIOD((short)2, "orderEndTimePeriod"),
    SUB_ACCOUNT_IDS((short)3, "subAccountIds"),
    ORDER_TARGETS((short)4, "orderTargets"),
    /**
     * 
     * @see QueryXQOrderHisIndexItemOrderType
     */
    ITEM_ORDER_TYPE((short)5, "itemOrderType");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_CREATE_TIME_PERIOD
          return ORDER_CREATE_TIME_PERIOD;
        case 2: // ORDER_END_TIME_PERIOD
          return ORDER_END_TIME_PERIOD;
        case 3: // SUB_ACCOUNT_IDS
          return SUB_ACCOUNT_IDS;
        case 4: // ORDER_TARGETS
          return ORDER_TARGETS;
        case 5: // ITEM_ORDER_TYPE
          return ITEM_ORDER_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private _Fields optionals[] = {_Fields.ORDER_CREATE_TIME_PERIOD,_Fields.ORDER_END_TIME_PERIOD,_Fields.SUB_ACCOUNT_IDS,_Fields.ORDER_TARGETS,_Fields.ITEM_ORDER_TYPE};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_CREATE_TIME_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("orderCreateTimePeriod", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, QueryTimePeriod.class)));
    tmpMap.put(_Fields.ORDER_END_TIME_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("orderEndTimePeriod", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, QueryTimePeriod.class)));
    tmpMap.put(_Fields.SUB_ACCOUNT_IDS, new org.apache.thrift.meta_data.FieldMetaData("subAccountIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.ORDER_TARGETS, new org.apache.thrift.meta_data.FieldMetaData("orderTargets", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget.class))));
    tmpMap.put(_Fields.ITEM_ORDER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("itemOrderType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, QueryXQOrderHisIndexItemOrderType.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QueryXQOrderHisIndexItemOption.class, metaDataMap);
  }

  public QueryXQOrderHisIndexItemOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QueryXQOrderHisIndexItemOption(QueryXQOrderHisIndexItemOption other) {
    if (other.isSetOrderCreateTimePeriod()) {
      this.orderCreateTimePeriod = new QueryTimePeriod(other.orderCreateTimePeriod);
    }
    if (other.isSetOrderEndTimePeriod()) {
      this.orderEndTimePeriod = new QueryTimePeriod(other.orderEndTimePeriod);
    }
    if (other.isSetSubAccountIds()) {
      Set<Long> __this__subAccountIds = new HashSet<Long>(other.subAccountIds);
      this.subAccountIds = __this__subAccountIds;
    }
    if (other.isSetOrderTargets()) {
      Set<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget> __this__orderTargets = new HashSet<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget>(other.orderTargets.size());
      for (xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget other_element : other.orderTargets) {
        __this__orderTargets.add(new xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget(other_element));
      }
      this.orderTargets = __this__orderTargets;
    }
    if (other.isSetItemOrderType()) {
      this.itemOrderType = other.itemOrderType;
    }
  }

  public QueryXQOrderHisIndexItemOption deepCopy() {
    return new QueryXQOrderHisIndexItemOption(this);
  }

  @Override
  public void clear() {
    this.orderCreateTimePeriod = null;
    this.orderEndTimePeriod = null;
    this.subAccountIds = null;
    this.orderTargets = null;
    this.itemOrderType = null;
  }

  public QueryTimePeriod getOrderCreateTimePeriod() {
    return this.orderCreateTimePeriod;
  }

  public QueryXQOrderHisIndexItemOption setOrderCreateTimePeriod(QueryTimePeriod orderCreateTimePeriod) {
    this.orderCreateTimePeriod = orderCreateTimePeriod;
    return this;
  }

  public void unsetOrderCreateTimePeriod() {
    this.orderCreateTimePeriod = null;
  }

  /** Returns true if field orderCreateTimePeriod is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderCreateTimePeriod() {
    return this.orderCreateTimePeriod != null;
  }

  public void setOrderCreateTimePeriodIsSet(boolean value) {
    if (!value) {
      this.orderCreateTimePeriod = null;
    }
  }

  public QueryTimePeriod getOrderEndTimePeriod() {
    return this.orderEndTimePeriod;
  }

  public QueryXQOrderHisIndexItemOption setOrderEndTimePeriod(QueryTimePeriod orderEndTimePeriod) {
    this.orderEndTimePeriod = orderEndTimePeriod;
    return this;
  }

  public void unsetOrderEndTimePeriod() {
    this.orderEndTimePeriod = null;
  }

  /** Returns true if field orderEndTimePeriod is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderEndTimePeriod() {
    return this.orderEndTimePeriod != null;
  }

  public void setOrderEndTimePeriodIsSet(boolean value) {
    if (!value) {
      this.orderEndTimePeriod = null;
    }
  }

  public int getSubAccountIdsSize() {
    return (this.subAccountIds == null) ? 0 : this.subAccountIds.size();
  }

  public java.util.Iterator<Long> getSubAccountIdsIterator() {
    return (this.subAccountIds == null) ? null : this.subAccountIds.iterator();
  }

  public void addToSubAccountIds(long elem) {
    if (this.subAccountIds == null) {
      this.subAccountIds = new HashSet<Long>();
    }
    this.subAccountIds.add(elem);
  }

  public Set<Long> getSubAccountIds() {
    return this.subAccountIds;
  }

  public QueryXQOrderHisIndexItemOption setSubAccountIds(Set<Long> subAccountIds) {
    this.subAccountIds = subAccountIds;
    return this;
  }

  public void unsetSubAccountIds() {
    this.subAccountIds = null;
  }

  /** Returns true if field subAccountIds is set (has been assigned a value) and false otherwise */
  public boolean isSetSubAccountIds() {
    return this.subAccountIds != null;
  }

  public void setSubAccountIdsIsSet(boolean value) {
    if (!value) {
      this.subAccountIds = null;
    }
  }

  public int getOrderTargetsSize() {
    return (this.orderTargets == null) ? 0 : this.orderTargets.size();
  }

  public java.util.Iterator<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget> getOrderTargetsIterator() {
    return (this.orderTargets == null) ? null : this.orderTargets.iterator();
  }

  public void addToOrderTargets(xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget elem) {
    if (this.orderTargets == null) {
      this.orderTargets = new HashSet<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget>();
    }
    this.orderTargets.add(elem);
  }

  public Set<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget> getOrderTargets() {
    return this.orderTargets;
  }

  public QueryXQOrderHisIndexItemOption setOrderTargets(Set<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget> orderTargets) {
    this.orderTargets = orderTargets;
    return this;
  }

  public void unsetOrderTargets() {
    this.orderTargets = null;
  }

  /** Returns true if field orderTargets is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderTargets() {
    return this.orderTargets != null;
  }

  public void setOrderTargetsIsSet(boolean value) {
    if (!value) {
      this.orderTargets = null;
    }
  }

  /**
   * 
   * @see QueryXQOrderHisIndexItemOrderType
   */
  public QueryXQOrderHisIndexItemOrderType getItemOrderType() {
    return this.itemOrderType;
  }

  /**
   * 
   * @see QueryXQOrderHisIndexItemOrderType
   */
  public QueryXQOrderHisIndexItemOption setItemOrderType(QueryXQOrderHisIndexItemOrderType itemOrderType) {
    this.itemOrderType = itemOrderType;
    return this;
  }

  public void unsetItemOrderType() {
    this.itemOrderType = null;
  }

  /** Returns true if field itemOrderType is set (has been assigned a value) and false otherwise */
  public boolean isSetItemOrderType() {
    return this.itemOrderType != null;
  }

  public void setItemOrderTypeIsSet(boolean value) {
    if (!value) {
      this.itemOrderType = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_CREATE_TIME_PERIOD:
      if (value == null) {
        unsetOrderCreateTimePeriod();
      } else {
        setOrderCreateTimePeriod((QueryTimePeriod)value);
      }
      break;

    case ORDER_END_TIME_PERIOD:
      if (value == null) {
        unsetOrderEndTimePeriod();
      } else {
        setOrderEndTimePeriod((QueryTimePeriod)value);
      }
      break;

    case SUB_ACCOUNT_IDS:
      if (value == null) {
        unsetSubAccountIds();
      } else {
        setSubAccountIds((Set<Long>)value);
      }
      break;

    case ORDER_TARGETS:
      if (value == null) {
        unsetOrderTargets();
      } else {
        setOrderTargets((Set<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget>)value);
      }
      break;

    case ITEM_ORDER_TYPE:
      if (value == null) {
        unsetItemOrderType();
      } else {
        setItemOrderType((QueryXQOrderHisIndexItemOrderType)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_CREATE_TIME_PERIOD:
      return getOrderCreateTimePeriod();

    case ORDER_END_TIME_PERIOD:
      return getOrderEndTimePeriod();

    case SUB_ACCOUNT_IDS:
      return getSubAccountIds();

    case ORDER_TARGETS:
      return getOrderTargets();

    case ITEM_ORDER_TYPE:
      return getItemOrderType();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_CREATE_TIME_PERIOD:
      return isSetOrderCreateTimePeriod();
    case ORDER_END_TIME_PERIOD:
      return isSetOrderEndTimePeriod();
    case SUB_ACCOUNT_IDS:
      return isSetSubAccountIds();
    case ORDER_TARGETS:
      return isSetOrderTargets();
    case ITEM_ORDER_TYPE:
      return isSetItemOrderType();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QueryXQOrderHisIndexItemOption)
      return this.equals((QueryXQOrderHisIndexItemOption)that);
    return false;
  }

  public boolean equals(QueryXQOrderHisIndexItemOption that) {
    if (that == null)
      return false;

    boolean this_present_orderCreateTimePeriod = true && this.isSetOrderCreateTimePeriod();
    boolean that_present_orderCreateTimePeriod = true && that.isSetOrderCreateTimePeriod();
    if (this_present_orderCreateTimePeriod || that_present_orderCreateTimePeriod) {
      if (!(this_present_orderCreateTimePeriod && that_present_orderCreateTimePeriod))
        return false;
      if (!this.orderCreateTimePeriod.equals(that.orderCreateTimePeriod))
        return false;
    }

    boolean this_present_orderEndTimePeriod = true && this.isSetOrderEndTimePeriod();
    boolean that_present_orderEndTimePeriod = true && that.isSetOrderEndTimePeriod();
    if (this_present_orderEndTimePeriod || that_present_orderEndTimePeriod) {
      if (!(this_present_orderEndTimePeriod && that_present_orderEndTimePeriod))
        return false;
      if (!this.orderEndTimePeriod.equals(that.orderEndTimePeriod))
        return false;
    }

    boolean this_present_subAccountIds = true && this.isSetSubAccountIds();
    boolean that_present_subAccountIds = true && that.isSetSubAccountIds();
    if (this_present_subAccountIds || that_present_subAccountIds) {
      if (!(this_present_subAccountIds && that_present_subAccountIds))
        return false;
      if (!this.subAccountIds.equals(that.subAccountIds))
        return false;
    }

    boolean this_present_orderTargets = true && this.isSetOrderTargets();
    boolean that_present_orderTargets = true && that.isSetOrderTargets();
    if (this_present_orderTargets || that_present_orderTargets) {
      if (!(this_present_orderTargets && that_present_orderTargets))
        return false;
      if (!this.orderTargets.equals(that.orderTargets))
        return false;
    }

    boolean this_present_itemOrderType = true && this.isSetItemOrderType();
    boolean that_present_itemOrderType = true && that.isSetItemOrderType();
    if (this_present_itemOrderType || that_present_itemOrderType) {
      if (!(this_present_itemOrderType && that_present_itemOrderType))
        return false;
      if (!this.itemOrderType.equals(that.itemOrderType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(QueryXQOrderHisIndexItemOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderCreateTimePeriod()).compareTo(other.isSetOrderCreateTimePeriod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderCreateTimePeriod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderCreateTimePeriod, other.orderCreateTimePeriod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderEndTimePeriod()).compareTo(other.isSetOrderEndTimePeriod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderEndTimePeriod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderEndTimePeriod, other.orderEndTimePeriod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSubAccountIds()).compareTo(other.isSetSubAccountIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubAccountIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subAccountIds, other.subAccountIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderTargets()).compareTo(other.isSetOrderTargets());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderTargets()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderTargets, other.orderTargets);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetItemOrderType()).compareTo(other.isSetItemOrderType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItemOrderType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.itemOrderType, other.itemOrderType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QueryXQOrderHisIndexItemOption(");
    boolean first = true;

    if (isSetOrderCreateTimePeriod()) {
      sb.append("orderCreateTimePeriod:");
      if (this.orderCreateTimePeriod == null) {
        sb.append("null");
      } else {
        sb.append(this.orderCreateTimePeriod);
      }
      first = false;
    }
    if (isSetOrderEndTimePeriod()) {
      if (!first) sb.append(", ");
      sb.append("orderEndTimePeriod:");
      if (this.orderEndTimePeriod == null) {
        sb.append("null");
      } else {
        sb.append(this.orderEndTimePeriod);
      }
      first = false;
    }
    if (isSetSubAccountIds()) {
      if (!first) sb.append(", ");
      sb.append("subAccountIds:");
      if (this.subAccountIds == null) {
        sb.append("null");
      } else {
        sb.append(this.subAccountIds);
      }
      first = false;
    }
    if (isSetOrderTargets()) {
      if (!first) sb.append(", ");
      sb.append("orderTargets:");
      if (this.orderTargets == null) {
        sb.append("null");
      } else {
        sb.append(this.orderTargets);
      }
      first = false;
    }
    if (isSetItemOrderType()) {
      if (!first) sb.append(", ");
      sb.append("itemOrderType:");
      if (this.itemOrderType == null) {
        sb.append("null");
      } else {
        sb.append(this.itemOrderType);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check for sub-struct validity
    if (orderCreateTimePeriod != null) {
      orderCreateTimePeriod.validate();
    }
    if (orderEndTimePeriod != null) {
      orderEndTimePeriod.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QueryXQOrderHisIndexItemOptionStandardSchemeFactory implements SchemeFactory {
    public QueryXQOrderHisIndexItemOptionStandardScheme getScheme() {
      return new QueryXQOrderHisIndexItemOptionStandardScheme();
    }
  }

  private static class QueryXQOrderHisIndexItemOptionStandardScheme extends StandardScheme<QueryXQOrderHisIndexItemOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QueryXQOrderHisIndexItemOption struct) throws TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_CREATE_TIME_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.orderCreateTimePeriod = new QueryTimePeriod();
              struct.orderCreateTimePeriod.read(iprot);
              struct.setOrderCreateTimePeriodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ORDER_END_TIME_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.orderEndTimePeriod = new QueryTimePeriod();
              struct.orderEndTimePeriod.read(iprot);
              struct.setOrderEndTimePeriodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUB_ACCOUNT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set16 = iprot.readSetBegin();
                struct.subAccountIds = new HashSet<Long>(2*_set16.size);
                for (int _i17 = 0; _i17 < _set16.size; ++_i17)
                {
                  long _elem18;
                  _elem18 = iprot.readI64();
                  struct.subAccountIds.add(_elem18);
                }
                iprot.readSetEnd();
              }
              struct.setSubAccountIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ORDER_TARGETS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set19 = iprot.readSetBegin();
                struct.orderTargets = new HashSet<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget>(2*_set19.size);
                for (int _i20 = 0; _i20 < _set19.size; ++_i20)
                {
                  xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget _elem21;
                  _elem21 = new xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget();
                  _elem21.read(iprot);
                  struct.orderTargets.add(_elem21);
                }
                iprot.readSetEnd();
              }
              struct.setOrderTargetsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ITEM_ORDER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.itemOrderType = QueryXQOrderHisIndexItemOrderType.findByValue(iprot.readI32());
              struct.setItemOrderTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QueryXQOrderHisIndexItemOption struct) throws TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderCreateTimePeriod != null) {
        if (struct.isSetOrderCreateTimePeriod()) {
          oprot.writeFieldBegin(ORDER_CREATE_TIME_PERIOD_FIELD_DESC);
          struct.orderCreateTimePeriod.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderEndTimePeriod != null) {
        if (struct.isSetOrderEndTimePeriod()) {
          oprot.writeFieldBegin(ORDER_END_TIME_PERIOD_FIELD_DESC);
          struct.orderEndTimePeriod.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.subAccountIds != null) {
        if (struct.isSetSubAccountIds()) {
          oprot.writeFieldBegin(SUB_ACCOUNT_IDS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, struct.subAccountIds.size()));
            for (long _iter22 : struct.subAccountIds)
            {
              oprot.writeI64(_iter22);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.orderTargets != null) {
        if (struct.isSetOrderTargets()) {
          oprot.writeFieldBegin(ORDER_TARGETS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, struct.orderTargets.size()));
            for (xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget _iter23 : struct.orderTargets)
            {
              _iter23.write(oprot);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.itemOrderType != null) {
        if (struct.isSetItemOrderType()) {
          oprot.writeFieldBegin(ITEM_ORDER_TYPE_FIELD_DESC);
          oprot.writeI32(struct.itemOrderType.getValue());
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QueryXQOrderHisIndexItemOptionTupleSchemeFactory implements SchemeFactory {
    public QueryXQOrderHisIndexItemOptionTupleScheme getScheme() {
      return new QueryXQOrderHisIndexItemOptionTupleScheme();
    }
  }

  private static class QueryXQOrderHisIndexItemOptionTupleScheme extends TupleScheme<QueryXQOrderHisIndexItemOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QueryXQOrderHisIndexItemOption struct) throws TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderCreateTimePeriod()) {
        optionals.set(0);
      }
      if (struct.isSetOrderEndTimePeriod()) {
        optionals.set(1);
      }
      if (struct.isSetSubAccountIds()) {
        optionals.set(2);
      }
      if (struct.isSetOrderTargets()) {
        optionals.set(3);
      }
      if (struct.isSetItemOrderType()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetOrderCreateTimePeriod()) {
        struct.orderCreateTimePeriod.write(oprot);
      }
      if (struct.isSetOrderEndTimePeriod()) {
        struct.orderEndTimePeriod.write(oprot);
      }
      if (struct.isSetSubAccountIds()) {
        {
          oprot.writeI32(struct.subAccountIds.size());
          for (long _iter24 : struct.subAccountIds)
          {
            oprot.writeI64(_iter24);
          }
        }
      }
      if (struct.isSetOrderTargets()) {
        {
          oprot.writeI32(struct.orderTargets.size());
          for (xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget _iter25 : struct.orderTargets)
          {
            _iter25.write(oprot);
          }
        }
      }
      if (struct.isSetItemOrderType()) {
        oprot.writeI32(struct.itemOrderType.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QueryXQOrderHisIndexItemOption struct) throws TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.orderCreateTimePeriod = new QueryTimePeriod();
        struct.orderCreateTimePeriod.read(iprot);
        struct.setOrderCreateTimePeriodIsSet(true);
      }
      if (incoming.get(1)) {
        struct.orderEndTimePeriod = new QueryTimePeriod();
        struct.orderEndTimePeriod.read(iprot);
        struct.setOrderEndTimePeriodIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TSet _set26 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.subAccountIds = new HashSet<Long>(2*_set26.size);
          for (int _i27 = 0; _i27 < _set26.size; ++_i27)
          {
            long _elem28;
            _elem28 = iprot.readI64();
            struct.subAccountIds.add(_elem28);
          }
        }
        struct.setSubAccountIdsIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TSet _set29 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.orderTargets = new HashSet<xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget>(2*_set29.size);
          for (int _i30 = 0; _i30 < _set29.size; ++_i30)
          {
            xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget _elem31;
            _elem31 = new xueqiao.trade.hosting.arbitrage.thriftapi.HostingXQTarget();
            _elem31.read(iprot);
            struct.orderTargets.add(_elem31);
          }
        }
        struct.setOrderTargetsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.itemOrderType = QueryXQOrderHisIndexItemOrderType.findByValue(iprot.readI32());
        struct.setItemOrderTypeIsSet(true);
      }
    }
  }

}

